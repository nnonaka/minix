diff -rNU3 a/bfd/aoutx.h b/bfd/aoutx.h
--- a/bfd/aoutx.h	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/aoutx.h	2022-12-25 05:17:04.000000000 +0900
@@ -768,7 +768,7 @@
       break;
 
     case bfd_arch_arm:
-      if (machine == 0)
+      if (machine == 0 || machine == 5)
 	arch_flags = M_ARM;
       break;
 
diff -rNU3 a/bfd/archive.c b/bfd/archive.c
--- a/bfd/archive.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/archive.c	2022-12-25 05:17:04.000000000 +0900
@@ -162,6 +162,9 @@
 #define ar_maxnamelen(abfd) ((abfd)->xvec->ar_max_namelen)
 
 #define arch_eltdata(bfd) ((struct areltdata *) ((bfd)->arelt_data))
+
+static const char * normalize (bfd *, const char *);
+
 #define arch_hdr(bfd) ((struct ar_hdr *) arch_eltdata (bfd)->arch_header)
 
 /* True iff NAME designated a BSD 4.4 extended name.  */
@@ -844,6 +847,16 @@
     {
       filestart = last_file->proxy_origin;
       if (! bfd_is_thin_archive (archive))
+#if 0
+/* OLD CODE */
+	filestart += size;
+      /* Pad to an even boundary...
+	 Note that last_file->origin can be odd in the case of
+	 BSD-4.4-style element with a long odd size.  */
+      if (!strncmp(arch_hdr (last_file)->ar_name, "#1/", 3))
+	size += strlen(normalize(last_file, last_file->filename));
+      filestart += size % 2;
+#endif
 	{
 	  bfd_size_type size = arelt_size (last_file);
 
@@ -2214,11 +2227,22 @@
        current = current->archive_next)
     {
       char buffer[DEFAULT_BUFFERSIZE];
-      bfd_size_type remaining = arelt_size (current);
+      bfd_size_type saved_size = arelt_size (current);
+      bfd_size_type remaining = saved_size;
+      struct ar_hdr *hdr = arch_hdr (current);
 
       /* Write ar header.  */
       if (!_bfd_write_ar_hdr (arch, current))
-	return false;
+        return false;
+      /* Write filename if it is a 4.4BSD extended file, and add to size.  */
+      if (!strncmp (hdr->ar_name, "#1/", 3))
+	{
+	  const char *normal = normalize (current, current->filename);
+	  unsigned int thislen = strlen (normal);
+	  if (bfd_write (normal, 1, thislen, arch) != thislen)
+	    return false;
+	  saved_size += thislen;
+	}
       if (bfd_is_thin_archive (arch))
 	continue;
       if (bfd_seek (current, (file_ptr) 0, SEEK_SET) != 0)
@@ -2541,11 +2565,19 @@
 	{
 	  do
 	    {
+#if 1
+	      bfd_size_type size = arelt_size (current);
+	      if (!strncmp(arch_hdr (current)->ar_name, "#1/", 3))
+		size += strlen(normalize(current, current->filename));
+	      firstreal += size + sizeof (struct ar_hdr);
+	      firstreal += size % 2;
+#else
 	      struct areltdata *ared = arch_eltdata (current);
 
 	      firstreal += (ared->parsed_size + ared->extra_size
 			    + sizeof (struct ar_hdr));
 	      firstreal += firstreal % 2;
+#endif
 	      current = current->archive_next;
 	    }
 	  while (current != map[count].u.abfd);
diff -rNU3 a/bfd/archures.c b/bfd/archures.c
--- a/bfd/archures.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/archures.c	2022-12-25 05:17:04.000000000 +0900
@@ -666,6 +666,7 @@
 extern const bfd_arch_info_type bfd_nfp_arch;
 extern const bfd_arch_info_type bfd_nios2_arch;
 extern const bfd_arch_info_type bfd_ns32k_arch;
+extern const bfd_arch_info_type bfd_openrisc_arch;
 extern const bfd_arch_info_type bfd_or1k_arch;
 extern const bfd_arch_info_type bfd_pdp11_arch;
 extern const bfd_arch_info_type bfd_pj_arch;
@@ -754,6 +755,7 @@
     &bfd_nfp_arch,
     &bfd_nios2_arch,
     &bfd_ns32k_arch,
+    &bfd_openrisc_arch,
     &bfd_or1k_arch,
     &bfd_pdp11_arch,
     &bfd_powerpc_arch,
diff -rNU3 a/bfd/coff-alpha.c b/bfd/coff-alpha.c
--- a/bfd/coff-alpha.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/coff-alpha.c	2022-12-25 05:17:04.000000000 +0900
@@ -640,7 +640,9 @@
     case ALPHA_R_OP_STORE:
       /* The STORE reloc needs the size and offset fields.  We store
 	 them in the addend.  */
+#if 0
       BFD_ASSERT (intern->r_offset <= 256);
+#endif
       rptr->addend = (intern->r_offset << 8) + intern->r_size;
       break;
 
diff -rNU3 a/bfd/config.bfd b/bfd/config.bfd
--- a/bfd/config.bfd	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/config.bfd	2023-02-08 10:53:12.000000000 +0900
@@ -638,8 +638,8 @@
     ;;
   i[3-7]86-*-netbsd* | i[3-7]86-*-knetbsd*-gnu)
     targ_defvec=i386_elf32_vec
-    targ_selvecs="iamcu_elf32_vec"
-    targ64_selvecs="x86_64_elf64_vec"
+    targ_selvecs="iamcu_elf32_vec i386_coff_vec i386_pei_vec"
+    targ64_selvecs="x86_64_elf64_vec x86_64_pe_vec x86_64_pei_vec"
     ;;
   i[3-7]86-*-openbsd*)
     targ_defvec=i386_elf32_vec
@@ -863,14 +863,6 @@
     ;;
 
 #ifdef BFD64
-  mips*el-*-netbsd*)
-    targ_defvec=mips_elf32_trad_le_vec
-    targ_selvecs="mips_elf32_trad_be_vec mips_elf64_trad_be_vec mips_elf64_trad_le_vec mips_ecoff_le_vec mips_ecoff_be_vec"
-    ;;
-  mips*-*-netbsd*)
-    targ_defvec=mips_elf32_trad_be_vec
-    targ_selvecs="mips_elf32_trad_le_vec mips_elf64_trad_be_vec mips_elf64_trad_le_vec mips_ecoff_be_vec mips_ecoff_le_vec"
-    ;;
   mips*el-*-haiku*)
     targ_defvec=mips_elf32_le_vec
     targ_selvecs="mips_elf32_be_vec mips_elf64_be_vec mips_elf64_le_vec mips_ecoff_le_vec mips_ecoff_be_vec"
@@ -915,6 +907,22 @@
     targ_defvec=mips_elf32_be_vec
     targ_selvecs="mips_elf32_le_vec mips_elf64_be_vec mips_elf64_le_vec"
     ;;
+  mips64*el-*-netbsd*)
+    targ_defvec=mips_elf32_ntrad_le_vec
+    targ_selvecs="mips_elf32_ntrad_be_vec mips_elf32_trad_le_vec mips_elf32_trad_be_vec mips_elf64_trad_le_vec mips_elf64_trad_be_vec mips_ecoff_le_vec mips_ecoff_be_vec"
+    ;;
+  mips64*-*-netbsd*)
+    targ_defvec=mips_elf32_ntrad_be_vec
+    targ_selvecs="mips_elf32_ntrad_le_vec mips_elf32_trad_be_vec mips_elf32_trad_le_vec mips_elf64_trad_be_vec mips_elf64_trad_le_vec mips_ecoff_be_vec mips_ecoff_le_vec"
+    ;;
+  mips*el-*-netbsd*)
+    targ_defvec=mips_elf32_trad_le_vec
+    targ_selvecs="mips_elf32_trad_be_vec mips_elf32_ntrad_le_vec mips_elf32_ntrad_be_vec mips_elf64_trad_be_vec mips_elf64_trad_le_vec mips_ecoff_le_vec mips_ecoff_be_vec"
+    ;;
+  mips*-*-netbsd*)
+    targ_defvec=mips_elf32_trad_be_vec
+    targ_selvecs="mips_elf32_trad_le_vec mips_elf32_ntrad_be_vec mips_elf32_ntrad_le_vec mips_elf64_trad_le_vec mips_elf64_trad_be_vec mips_ecoff_be_vec mips_ecoff_le_vec"
+    ;;
   mips64*-*-openbsd*)
     targ_defvec=mips_elf64_trad_be_vec
     targ_selvecs="mips_elf32_ntrad_le_vec mips_elf32_ntrad_be_vec mips_elf32_trad_le_vec mips_elf32_trad_be_vec mips_elf64_trad_le_vec"
@@ -1046,7 +1054,7 @@
     targ_selvecs=nios2_elf32_be_vec
     ;;
 
-  or1k-*-elf | or1k-*-linux* | or1k-*-rtems*)
+  or1k-*-elf | or1k-*-linux* | or1k-*-rtems* | or1k*-*-netbsd*)
     targ_defvec=or1k_elf32_vec
     ;;
 
@@ -1277,6 +1285,7 @@
   sh*-*-netbsd*)
     targ_defvec=sh_elf32_nbsd_vec
     targ_selvecs="sh_elf32_nbsd_le_vec sh_coff_vec sh_coff_le_vec"
+    want64=true
     ;;
 
   shl*-*-elf* | sh[1234]l*-*-elf* | sh3el*-*-elf* | shl*-*-kaos*)
@@ -1320,6 +1329,10 @@
     targ_underscore=yes
     ;;
 
+  sparc-*-netbsdelf*)
+    targ_defvec=sparc_elf32_vec
+    want64=true
+    ;;
   sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
     # PR 27666: Do not include sparc_elf32_vec here.
     targ_defvec=sparc_elf32_sol2_vec
diff -rNU3 a/bfd/configure b/bfd/configure
--- a/bfd/configure	2022-08-05 18:54:00.000000000 +0900
+++ b/bfd/configure	2023-01-16 08:10:52.000000000 +0900
@@ -11977,9 +11977,9 @@
 esac
 fi
 
-# Enable -z separate-code by default for Linux/x86.
+# Enable -z separate-code by default for Linux/x86 and NetBSD/x86
 case "${target}" in
-i[3-7]86-*-linux-* | x86_64-*-linux-*)
+i[3-7]86-*-linux-* | x86_64-*-linux-* | i[3-7]86-*-netbsd* | x86_64-*-netbsd*)
   if test ${ac_default_ld_z_separate_code} = unset; then
     ac_default_ld_z_separate_code=1
   fi
@@ -12086,17 +12086,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -12131,17 +12131,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
@@ -13422,6 +13422,7 @@
     i386_aout_vec)		 tb="$tb i386aout.lo aout32.lo" ;;
     i386_aout_bsd_vec)		 tb="$tb i386bsd.lo aout32.lo" ;;
     i386_aout_lynx_vec)		 tb="$tb i386lynx.lo lynx-core.lo aout32.lo" ;;
+    i386_aout_nbsd_vec)		 tb="$tb i386netbsd.lo aout32.lo" ;;
     i386_coff_vec)		 tb="$tb coff-i386.lo $coff" ;;
     i386_coff_go32_vec)		 tb="$tb coff-go32.lo $coff" ;;
     i386_coff_go32stubbed_vec)	 tb="$tb coff-stgo32.lo $coff" ;;
@@ -13776,6 +13777,7 @@
 	COREFILE=netbsd-core.lo
 	;;
   arm-*-riscix)		COREFILE=trad-core.lo ;;
+  arm*-*-netbsd*)	COREFILE=netbsd-core.lo ;;
   hppa*-*-hpux*)	COREFILE=hpux-core.lo ;;
   hppa*-*-hiux*)	COREFILE=hpux-core.lo ;;
   hppa*-*-mpeix*)	COREFILE=hpux-core.lo ;;
diff -rNU3 a/bfd/configure.ac b/bfd/configure.ac
--- a/bfd/configure.ac	2022-08-01 16:12:32.000000000 +0900
+++ b/bfd/configure.ac	2023-01-07 00:47:38.000000000 +0900
@@ -121,7 +121,7 @@
   yes)  use_secureplt=true  ;;
   no)   use_secureplt=false ;;
   *)    AC_MSG_ERROR(bad value ${enableval} for secureplt option) ;;
-esac],[use_secureplt=true])dnl
+esac],[use_secureplt=false])dnl
 if test $use_secureplt = true; then
   AC_DEFINE(USE_SECUREPLT, 1,
     [Define if we should default to creating read-only plt entries])
@@ -136,10 +136,10 @@
   yes) ac_default_ld_z_separate_code=1 ;;
   no) ac_default_ld_z_separate_code=0 ;;
 esac])
-# Enable -z separate-code by default for Linux/x86.
+# Enable -z separate-code by default for Linux/x86 and NetBSD/x86
 changequote(,)dnl
 case "${target}" in
-i[3-7]86-*-linux-* | x86_64-*-linux-*)
+i[3-7]86-*-linux-* | x86_64-*-linux-* | i[3-7]86-*-netbsd | x86_64-*-netbsd* )
 changequote([,])dnl
   if test ${ac_default_ld_z_separate_code} = unset; then
     ac_default_ld_z_separate_code=1
@@ -479,6 +479,7 @@
     i386_aout_vec)		 tb="$tb i386aout.lo aout32.lo" ;;
     i386_aout_bsd_vec)		 tb="$tb i386bsd.lo aout32.lo" ;;
     i386_aout_lynx_vec)		 tb="$tb i386lynx.lo lynx-core.lo aout32.lo" ;;
+    i386_aout_nbsd_vec)		 tb="$tb i386netbsd.lo aout32.lo" ;;
     i386_coff_vec)		 tb="$tb coff-i386.lo $coff" ;;
     i386_coff_go32_vec)		 tb="$tb coff-go32.lo $coff" ;;
     i386_coff_go32stubbed_vec)	 tb="$tb coff-stgo32.lo $coff" ;;
diff -rNU3 a/bfd/configure.host b/bfd/configure.host
--- a/bfd/configure.host	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/configure.host	2022-12-25 05:17:04.000000000 +0900
@@ -72,6 +72,10 @@
 mips*-*-sysv*)		HDEFINES="-G 4" ;;
 mips*-*-riscos*)	HDEFINES="-G 4" ;;
 
+sparc64*-*-netbsd*)	host64=true; HOST_64BIT_TYPE=long ;;
+
+x86_64*-*-netbsd*)	host64=true; HOST_64BIT_TYPE=long ;;
+
 # Some Solaris systems (osol0906 at least) have a libc that doesn't recognise
 # the "MS-ANSI" code page name, so we define an override for CP_ACP (sets the
 # default code page used by windres/windmc when not specified by a commandline
diff -rNU3 a/bfd/elf32-arm.c b/bfd/elf32-arm.c
--- a/bfd/elf32-arm.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf32-arm.c	2022-12-25 05:17:04.000000000 +0900
@@ -3476,6 +3476,7 @@
 #endif
 }
 
+#if !defined (__NetBSD__) || (__NetBSD_Version__ < 600000000) 
 static inline int
 elf32_arm_popcount (unsigned int mask)
 {
@@ -3494,6 +3495,7 @@
   return sum;
 #endif
 }
+#endif
 
 static void elf32_arm_add_dynreloc (bfd *output_bfd, struct bfd_link_info *info,
 				    asection *sreloc, Elf_Internal_Rela *rel);
diff -rNU3 a/bfd/elf32-i386.c b/bfd/elf32-i386.c
--- a/bfd/elf32-i386.c	2022-07-26 16:13:10.000000000 +0900
+++ b/bfd/elf32-i386.c	2022-12-25 05:17:04.000000000 +0900
@@ -527,9 +527,14 @@
    one of the last functions.  */
 
 /* The size in bytes of an entry in the lazy procedure linkage table.  */
-
 #define LAZY_PLT_ENTRY_SIZE 16
 
+/* The name of the dynamic interpreter.  This is put in the .interp
+   section.  */
+
+#define ELF_DYNAMIC_INTERPRETER "/libexec/ld.elf_so"
+
+
 /* The size in bytes of an entry in the non-lazy procedure linkage
    table.  */
 
diff -rNU3 a/bfd/elf32-m68k.c b/bfd/elf32-m68k.c
--- a/bfd/elf32-m68k.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf32-m68k.c	2023-01-16 09:11:50.000000000 +0900
@@ -2546,7 +2546,7 @@
   if (ind->got_entry_key != 0)
     {
       BFD_ASSERT (dir->got_entry_key == 0);
-      /* Assert that GOTs aren't partioned yet.  */
+      /* Assert that GOTs aren't partitioned yet.  */
       BFD_ASSERT (ind->glist == NULL);
 
       dir->got_entry_key = ind->got_entry_key;
@@ -2803,7 +2803,13 @@
 		  && !(ELF32_R_TYPE (rel->r_info) == R_68K_PC8
 		       || ELF32_R_TYPE (rel->r_info) == R_68K_PC16
 		       || ELF32_R_TYPE (rel->r_info) == R_68K_PC32))
-		    info->flags |= DF_TEXTREL;
+		{
+		  if (bfd_link_textrel_check(info))
+		    (*_bfd_error_handler)
+		      (_("warning: dynamic relocation to `%s' in readonly section `%s'"),
+		      h->root.root.string, sec->name); 
+		  info->flags |= DF_TEXTREL;
+		}
 
 	      sreloc->size += sizeof (Elf32_External_Rela);
 
@@ -2965,6 +2971,7 @@
   /* Make sure we know what is going on here.  */
   BFD_ASSERT (dynobj != NULL
 	      && (h->needs_plt
+		  || h->type == STT_GNU_IFUNC
 		  || h->is_weakalias
 		  || (h->def_dynamic
 		      && h->ref_regular
@@ -2973,7 +2980,7 @@
   /* If this is a function, put it in the procedure linkage table.  We
      will fill in the contents of the procedure linkage table later,
      when we know the address of the .got section.  */
-  if (h->type == STT_FUNC
+  if ((h->type == STT_FUNC || h->type == STT_GNU_IFUNC)
       || h->needs_plt)
     {
       if ((h->plt.refcount <= 0
@@ -3251,6 +3258,10 @@
 	       s = s->next)
 	    if ((s->section->flags & SEC_READONLY) != 0)
 	      {
+		if (bfd_link_textrel_check(info))
+		  (*_bfd_error_handler)
+		    (_("warning: dynamic relocation to `%s' in readonly section `%s'"),
+		    h->root.root.string, s->section->name); 
 		info->flags |= DF_TEXTREL;
 		break;
 	      }
diff -rNU3 a/bfd/elf32-ppc.c b/bfd/elf32-ppc.c
--- a/bfd/elf32-ppc.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf32-ppc.c	2022-12-25 05:17:04.000000000 +0900
@@ -3027,7 +3027,7 @@
 	    sec->nomark_tls_get_addr = 1;
 	}
 
-      switch (r_type)
+      switch ((int)r_type)
 	{
 	case R_PPC_TLSGD:
 	case R_PPC_TLSLD:
diff -rNU3 a/bfd/elf32-sh.c b/bfd/elf32-sh.c
--- a/bfd/elf32-sh.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf32-sh.c	2022-12-25 05:17:04.000000000 +0900
@@ -2490,6 +2490,7 @@
   /* Make sure we know what is going on here.  */
   BFD_ASSERT (htab->root.dynobj != NULL
 	      && (h->needs_plt
+		  || h->type == STT_GNU_IFUNC
 		  || h->is_weakalias
 		  || (h->def_dynamic
 		      && h->ref_regular
@@ -2498,7 +2499,7 @@
   /* If this is a function, put it in the procedure linkage table.  We
      will fill in the contents of the procedure linkage table later,
      when we know the address of the .got section.  */
-  if (h->type == STT_FUNC
+  if ((h->type == STT_FUNC || h->type == STT_GNU_IFUNC)
       || h->needs_plt)
     {
       if (h->plt.refcount <= 0
diff -rNU3 a/bfd/elf32-vax.c b/bfd/elf32-vax.c
--- a/bfd/elf32-vax.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf32-vax.c	2023-01-16 09:11:50.000000000 +0900
@@ -496,6 +496,24 @@
   return true;
 }
 
+/* Copy vax-specific data from one module to another */
+static bool
+elf32_vax_copy_private_bfd_data (bfd *ibfd, bfd *obfd)
+{
+  flagword in_flags;
+
+  if (bfd_get_flavour (ibfd) != bfd_target_elf_flavour
+      || bfd_get_flavour (obfd) != bfd_target_elf_flavour)
+    return true;
+ 
+  in_flags = elf_elfheader (ibfd)->e_flags;
+ 
+  elf_elfheader (obfd)->e_flags = in_flags;
+  elf_flags_init (obfd) = true;
+ 
+  return true;
+}
+
 /* Merge backend specific data from an object file to the output
    object file when linking.  */
 static bool
@@ -733,7 +751,13 @@
 		    return false;
 
 		  if (sec->flags & SEC_READONLY)
-		    info->flags |= DF_TEXTREL;
+		    {
+			if (bfd_link_textrel_check(info))
+			  (*_bfd_error_handler)
+			    (_("warning: dynamic relocation to `%s' in readonly section `%s'"),
+			     h ? h->root.root.string : "?", sec->name);
+			info->flags |= DF_TEXTREL;
+		    }
 		}
 
 	      sreloc->size += sizeof (Elf32_External_Rela);
@@ -838,6 +862,7 @@
   /* Make sure we know what is going on here.  */
   BFD_ASSERT (dynobj != NULL
 	      && (h->needs_plt
+		  || h->type == STT_GNU_IFUNC
 		  || h->is_weakalias
 		  || (h->def_dynamic
 		      && h->ref_regular
@@ -846,7 +871,7 @@
   /* If this is a function, put it in the procedure linkage table.  We
      will fill in the contents of the procedure linkage table later,
      when we know the address of the .got section.  */
-  if (h->type == STT_FUNC
+  if ((h->type == STT_FUNC || h->type == STT_GNU_IFUNC)
       || h->needs_plt)
     {
       if (h->plt.refcount <= 0
@@ -1189,8 +1214,12 @@
 	}
 
       /* Allocate space in the .got and .rela.got sections.  */
-      sgot->size += 4;
-      srelgot->size += sizeof (Elf32_External_Rela);
+      if (bfd_link_pic (info) || WILL_CALL_FINISH_DYNAMIC_SYMBOL (
+          elf_hash_table (info)->dynamic_sections_created, 0, h))
+	{
+	  sgot->size += 4;
+	  srelgot->size += sizeof (Elf32_External_Rela);
+	}
     }
 
   return true;
@@ -1460,9 +1489,9 @@
 		    {
 		      relocate = true;
 		      outrel.r_info = ELF32_R_INFO (0, R_VAX_RELATIVE);
-		      BFD_ASSERT (bfd_get_signed_32 (input_bfd,
-						     &contents[rel->r_offset]) == 0);
-		      outrel.r_addend = relocation + rel->r_addend;
+		      outrel.r_addend = bfd_get_signed_32(input_bfd,
+							 &contents[rel->r_offset])
+					+ relocation + rel->r_addend;
 		    }
 		  else
 		    {
@@ -1501,6 +1530,9 @@
 		    }
 		}
 
+	      if (input_section->flags & SEC_CODE)
+		 info->flags |= DF_TEXTREL;
+
 	      if ((input_section->flags & SEC_CODE) != 0
 		  || (ELF32_R_TYPE (outrel.r_info) != R_VAX_32
 		      && ELF32_R_TYPE (outrel.r_info) != R_VAX_RELATIVE
@@ -1850,12 +1882,15 @@
 #define TARGET_LITTLE_SYM		vax_elf32_vec
 #define TARGET_LITTLE_NAME		"elf32-vax"
 #define ELF_MACHINE_CODE		EM_VAX
-#define ELF_MAXPAGESIZE			0x1000
+#define ELF_MAXPAGESIZE			0x10000
 
 #define elf_backend_create_dynamic_sections \
 					_bfd_elf_create_dynamic_sections
 #define bfd_elf32_bfd_link_hash_table_create \
 					elf_vax_link_hash_table_create
+#define bfd_elf32_bfd_copy_private_bfd_data \
+					elf32_vax_copy_private_bfd_data
+
 #define bfd_elf32_bfd_final_link	bfd_elf_gc_common_final_link
 
 #define elf_backend_check_relocs	elf_vax_check_relocs
diff -rNU3 a/bfd/elf64-alpha.c b/bfd/elf64-alpha.c
--- a/bfd/elf64-alpha.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf64-alpha.c	2022-12-25 05:17:04.000000000 +0900
@@ -99,6 +99,11 @@
 #define PLT_ENTRY_SIZE \
   (elf64_alpha_use_secureplt ? NEW_PLT_ENTRY_SIZE : OLD_PLT_ENTRY_SIZE)
 
+/* ld --traditional-format uses this older format instead. */
+#define OLD_PLT_ENTRY_WORD1	0x279f0000	/* ldah $28, 0($31) */
+#define OLD_PLT_ENTRY_WORD2	0x239c0000	/* lda  $28, 0($28) */
+#define OLD_PLT_ENTRY_WORD3	0xc3e00000	/* br   $31, plt0   */
+
 #define MAX_GOT_SIZE		(64*1024)
 
 #define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so"
@@ -4828,6 +4833,32 @@
 		plt_index = ((gotent->plt_offset - NEW_PLT_HEADER_SIZE)
 			     / NEW_PLT_ENTRY_SIZE);
 	      }
+	    else if ((output_bfd->flags & BFD_TRADITIONAL_FORMAT) != 0)
+	      {
+	        long hi, lo;
+
+	        /* decompose the reloc offset for the plt for ldah+lda */
+	        hi = plt_index * sizeof(Elf64_External_Rela);
+	        lo = ((hi & 0xffff) ^ 0x8000) - 0x8000;
+	        hi = (hi - lo) >> 16;
+
+	        insn = INSN_ABO (INSN_LDAH, 28, 31, hi);
+		bfd_put_32 (output_bfd, insn,
+			    splt->contents + gotent->plt_offset);
+
+	        insn = INSN_ABO (INSN_LDA, 28, 28, lo);
+		bfd_put_32 (output_bfd, insn,
+			    splt->contents + gotent->plt_offset + 4);
+
+		disp = -(gotent->plt_offset + 12);
+		insn = INSN_AD (INSN_BR, 31, disp);
+
+		bfd_put_32 (output_bfd, insn,
+			    splt->contents + gotent->plt_offset + 8);
+
+		plt_index = ((gotent->plt_offset - OLD_PLT_HEADER_SIZE)
+			     / OLD_PLT_ENTRY_SIZE);
+	      }
 	    else
 	      {
 		disp = -(gotent->plt_offset + 4);
diff -rNU3 a/bfd/elf64-mips.c b/bfd/elf64-mips.c
--- a/bfd/elf64-mips.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf64-mips.c	2023-01-16 09:11:50.000000000 +0900
@@ -111,6 +111,8 @@
   (bfd *, asymbol *, bool, char **, bfd_vma *);
 static bool mips_elf64_object_p
   (bfd *);
+static bool mips_elf64_is_local_label_name
+  (bfd *, const char *);
 static irix_compat_t elf64_mips_irix_compat
   (bfd *);
 static bool elf64_mips_grok_prstatus
@@ -3368,7 +3370,7 @@
 			      (Elf64_Mips_External_Rela *) dst);
 }
 
-/* Set the GP value for OUTPUT_BFD.  Returns FALSE if this is a
+/* Set the GP value for OUTPUT_BFD.  Returns false if this is a
    dangerous relocation.  */
 
 static bool
@@ -4516,7 +4518,18 @@
   bfd_default_set_arch_mach (abfd, bfd_arch_mips, mach);
   return true;
 }
+
+/* MIPS ELF local labels start with "$L".  */
+static bool
+mips_elf64_is_local_label_name (bfd *abfd, const char *name)
+{
+  if (name[0] == '$' && name[1] == 'L')
+    return true;
 
+  /* We accept the generic ELF local label syntax as well.  */
+  return _bfd_elf_is_local_label_name (abfd, name);
+}
+
 /* Depending on the target vector we generate some version of Irix
    executables or "normal" MIPS ELF ABI executables.  */
 static irix_compat_t
@@ -4785,9 +4798,8 @@
 #define elf_backend_write_section	_bfd_mips_elf_write_section
 #define elf_backend_sort_relocs_p	_bfd_mips_elf_sort_relocs_p
 
-/* We don't set bfd_elf64_bfd_is_local_label_name because the 32-bit
-   MIPS-specific function only applies to IRIX5, which had no 64-bit
-   ABI.  */
+#define bfd_elf64_bfd_is_local_label_name \
+					mips_elf64_is_local_label_name
 #define bfd_elf64_bfd_is_target_special_symbol \
 					_bfd_mips_elf_is_target_special_symbol
 #define bfd_elf64_find_nearest_line	_bfd_mips_elf_find_nearest_line
diff -rNU3 a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
--- a/bfd/elf64-ppc.c	2022-07-25 16:04:15.000000000 +0900
+++ b/bfd/elf64-ppc.c	2023-01-16 09:11:50.000000000 +0900
@@ -8099,7 +8099,7 @@
   return true;
 }
 
-/* Return TRUE iff REL is a branch reloc with a global symbol matching
+/* Return true iff REL is a branch reloc with a global symbol matching
    any of HASH1, HASH2, HASH3, or HASH4.  */
 
 static bool
@@ -8720,7 +8720,7 @@
   return true;
 }
 
-/* Return TRUE iff INSN with a relocation of R_TYPE is one we expect
+/* Return true iff INSN with a relocation of R_TYPE is one we expect
    on a _LO variety toc/got reloc.  */
 
 static bool
@@ -10273,7 +10273,13 @@
 		    srel = htab->elf.irelplt;
 		  srel->size += count * sizeof (Elf64_External_Rela);
 		  if ((p->sec->output_section->flags & SEC_READONLY) != 0)
-		    info->flags |= DF_TEXTREL;
+		    {
+		      if (bfd_link_textrel_check(info))
+			(*_bfd_error_handler)
+			  (_("warning: dynamic relocation in readonly section `%s'"),
+			  p->sec->output_section->name);
+		      info->flags |= DF_TEXTREL;
+		    }
 		}
 	    }
 	}
@@ -10614,7 +10620,7 @@
   return true;
 }
 
-/* Return TRUE if symbol should be hashed in the `.gnu.hash' section.  */
+/* Return true if symbol should be hashed in the `.gnu.hash' section.  */
 
 static bool
 ppc64_elf_hash_symbol (struct elf_link_hash_entry *h)
@@ -16461,6 +16467,11 @@
 			  can_plt_call = true;
 			}
 		    }
+		  else
+		    {
+		      /* Tail calls don't need to worry about restoring TOC. */
+		      can_plt_call = true;
+		    }
 		}
 
 	      if (!can_plt_call && h != NULL)
@@ -16480,7 +16491,7 @@
 		    }
 		}
 
-	      if (!can_plt_call)
+	      if (!can_plt_call && h != NULL)
 		{
 		  /* g++ as of 20130507 emits self-calls without a
 		     following nop.  This is arguably wrong since we
diff -rNU3 a/bfd/elf.c b/bfd/elf.c
--- a/bfd/elf.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elf.c	2022-12-25 05:17:04.000000000 +0900
@@ -297,6 +297,8 @@
       /* Allocate and clear an extra byte at the end, to prevent crashes
 	 in case the string table is not terminated.  */
       if (shstrtabsize + 1 <= 1
+	  || (bfd_get_file_size (abfd) > 0 /* not a character device */
+		&& shstrtabsize > bfd_get_file_size (abfd))
 	  || bfd_seek (abfd, offset, SEEK_SET) != 0
 	  || (shstrtab = _bfd_alloc_and_read (abfd, shstrtabsize + 1,
 					      shstrtabsize)) == NULL)
@@ -4367,7 +4369,7 @@
 get_program_header_size (bfd *abfd, struct bfd_link_info *info)
 {
   size_t segs;
-  asection *s;
+  asection *s, *s2;
   const struct elf_backend_data *bed;
 
   /* Assume we will need exactly two PT_LOAD segments: one for text
@@ -4375,21 +4377,28 @@
   segs = 2;
 
   s = bfd_get_section_by_name (abfd, ".interp");
+  s2 = bfd_get_section_by_name (abfd, ".dynamic");
   if (s != NULL && (s->flags & SEC_LOAD) != 0 && s->size != 0)
     {
-      /* If we have a loadable interpreter section, we need a
-	 PT_INTERP segment.  In this case, assume we also need a
-	 PT_PHDR segment, although that may not be true for all
-	 targets.  */
-      segs += 2;
+      ++segs;
     }
 
-  if (bfd_get_section_by_name (abfd, ".dynamic") != NULL)
+  if (s2 != NULL && (s2->flags & SEC_LOAD) != 0)
     {
       /* We need a PT_DYNAMIC segment.  */
       ++segs;
     }
 
+  if ((s != NULL && (s->flags & SEC_LOAD) != 0) ||
+      (s2 != NULL && (s2->flags & SEC_LOAD) != 0))
+    {
+      /*
+       * If either a PT_INTERP or PT_DYNAMIC segment is created,
+       * also create a PT_PHDR segment.
+       */
+      ++segs;
+    }
+
   if (info != NULL && info->relro)
     {
       /* We need a PT_GNU_RELRO segment.  */
@@ -4741,7 +4750,14 @@
 	 the program headers and a PT_INTERP segment for the .interp
 	 section.  */
       s = bfd_get_section_by_name (abfd, ".interp");
+      if (s != NULL && (s->flags & SEC_LOAD) == 0)
       if (s != NULL && (s->flags & SEC_LOAD) != 0 && s->size != 0)
+	s = NULL;
+      dynsec = bfd_get_section_by_name (abfd, ".dynamic");
+      if (dynsec != NULL && (dynsec->flags & SEC_LOAD) == 0)
+	dynsec = NULL;
+
+      if (s != NULL || dynsec != NULL)
 	{
 	  amt = sizeof (struct elf_segment_map);
 	  m = (struct elf_segment_map *) bfd_zalloc (abfd, amt);
@@ -4755,7 +4771,10 @@
 	  phdr_in_segment = true;
 	  *pm = m;
 	  pm = &m->next;
+	}
 
+      if (s != NULL)
+	{
 	  amt = sizeof (struct elf_segment_map);
 	  m = (struct elf_segment_map *) bfd_zalloc (abfd, amt);
 	  if (m == NULL)
diff -rNU3 a/bfd/elflink.c b/bfd/elflink.c
--- a/bfd/elflink.c	2022-07-25 16:04:15.000000000 +0900
+++ b/bfd/elflink.c	2022-12-25 05:17:04.000000000 +0900
@@ -3086,6 +3086,8 @@
   if (h->is_weakalias)
     {
       struct elf_link_hash_entry *def = weakdef (h);
+      while (def->root.type == bfd_link_hash_indirect)
+        def = (struct elf_link_hash_entry *) def->root.u.i.link;
 
       /* If the real definition is defined by a regular object file,
 	 don't do anything special.  See the longer description in
@@ -12072,7 +12074,14 @@
   if (bed->s->arch_size == 32)
     irel[0].r_info = ELF32_R_INFO (indx, howto->type);
   else
-    irel[0].r_info = ELF64_R_INFO (indx, howto->type);
+#ifdef BFD64
+          {
+            uint64_t indx64 = indx;
+            irel[0].r_info = ELF64_R_INFO (indx64, howto->type);
+          }
+#else
+          BFD_FAIL();
+#endif
 
   rel_hdr = reldata->hdr;
   erel = rel_hdr->contents;
diff -rNU3 a/bfd/elfn32-mips.c b/bfd/elfn32-mips.c
--- a/bfd/elfn32-mips.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elfn32-mips.c	2023-02-08 05:39:01.000000000 +0900
@@ -80,6 +80,8 @@
   (bfd *, Elf_Internal_Note *);
 static bool elf32_mips_grok_psinfo
   (bfd *, Elf_Internal_Note *);
+static bool mips_elf_n32_is_local_label_name
+  (bfd *, const char *);
 static bool elf_n32_mips_grok_freebsd_prstatus
   (bfd *, Elf_Internal_Note *);
 static irix_compat_t elf_n32_mips_irix_compat
@@ -3195,7 +3197,7 @@
 	 false);		/* pcrel_offset */
 
 
-/* Set the GP value for OUTPUT_BFD.  Returns FALSE if this is a
+/* Set the GP value for OUTPUT_BFD.  Returns false if this is a
    dangerous relocation.  */
 
 static bool
@@ -3845,7 +3847,7 @@
 	    || bfd_is_com_section (bfd_asymbol_section (sym)));
 }
 
-/* Likewise, return TRUE if the symbol table split overall must be
+/* Likewise, return true if the symbol table split overall must be
    between section symbols and all other symbols.  */
 static bool
 mips_elf_n32_elfsym_local_is_section (bfd *abfd)
@@ -4026,6 +4028,17 @@
     }
 }
 
+/* MIPS ELF local labels start with "$L".  */
+static bool
+mips_elf_n32_is_local_label_name (bfd *abfd, const char *name)
+{
+  if (name[0] == '$' && name[1] == 'L')
+    return true;
+
+  /* We accept the generic ELF local label syntax as well.  */
+  return _bfd_elf_is_local_label_name (abfd, name);
+}
+
 /* Depending on the target vector we generate some version of Irix
    executables or "normal" MIPS ELF ABI executables.  */
 static irix_compat_t
@@ -4172,6 +4185,9 @@
 					mips_elf_n32_elfsym_local_is_section
 #define elf_backend_mips_irix_compat	elf_n32_mips_irix_compat
 #define elf_backend_mips_rtype_to_howto	mips_elf_n32_rtype_to_howto
+
+#define bfd_elf32_bfd_is_local_label_name \
+					mips_elf_n32_is_local_label_name
 #define bfd_elf32_bfd_is_target_special_symbol \
 					_bfd_mips_elf_is_target_special_symbol
 #define bfd_elf32_find_nearest_line	_bfd_mips_elf_find_nearest_line
diff -rNU3 a/bfd/elfxx-mips.c b/bfd/elfxx-mips.c
--- a/bfd/elfxx-mips.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elfxx-mips.c	2022-12-25 05:17:04.000000000 +0900
@@ -9001,10 +9001,30 @@
 		     reloc types into the output file as R_MIPS_REL32
 		     relocs.  Make room for this reloc in .rel(a).dyn.  */
 		  mips_elf_allocate_dynamic_relocations (dynobj, info, 1);
-		  if (MIPS_ELF_READONLY_SECTION (sec))
-		    /* We tell the dynamic linker that there are
-		       relocations against the text segment.  */
-		    info->flags |= DF_TEXTREL;
+		  /* In the N32 and 64-bit ABIs there may be multiple
+		     consecutive relocations for the same offset.  If we have
+		     a R_MIPS_GPREL32 followed by a R_MIPS_64 then that
+		     relocation is complete and needs no futher adjustment.
+		     
+		     Silently ignore absolute relocations in the .eh_frame
+		     section, they will be dropped latter.
+		   */
+		  if ((rel == relocs
+		      || rel[-1].r_offset != rel->r_offset
+		      || r_type != R_MIPS_64
+		      || ELF_R_TYPE(abfd, rel[-1].r_info) != R_MIPS_GPREL32)
+		      && MIPS_ELF_READONLY_SECTION (sec)
+		      && !((r_type == R_MIPS_32 || r_type == R_MIPS_64)
+		           && strcmp(sec->name, ".eh_frame") == 0))
+		    {
+		      /* We tell the dynamic linker that there are
+		         relocations against the text segment.  */
+		      info->flags |= DF_TEXTREL;
+		      info->callbacks->warning
+			(info,
+			 _("relocation emitted against readonly section"),
+			 NULL, abfd, sec, rel->r_offset);
+		    }
 		}
 	      else
 		{
diff -rNU3 a/bfd/elfxx-sparc.c b/bfd/elfxx-sparc.c
--- a/bfd/elfxx-sparc.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/elfxx-sparc.c	2022-12-25 05:17:04.000000000 +0900
@@ -3476,6 +3476,23 @@
 	    tls_type = _bfd_sparc_elf_hash_entry (h)->tls_type;
 	  else if (local_got_offsets)
 	    tls_type = _bfd_sparc_elf_local_got_tls_type (input_bfd) [r_symndx];
+	  else if (h != NULL)
+	    {
+	      tls_type = _bfd_sparc_elf_hash_entry(h)->tls_type;
+	      if (!bfd_link_dll (info)
+		  && h->dynindx == -1
+		  && tls_type == GOT_TLS_IE)
+		switch (SPARC_ELF_R_TYPE (rel->r_info))
+		  {
+		  case R_SPARC_TLS_GD_HI22:
+		  case R_SPARC_TLS_IE_HI22:
+		    r_type = R_SPARC_TLS_LE_HIX22;
+		    break;
+		  default:
+		    r_type = R_SPARC_TLS_LE_LOX10;
+		    break;
+		  }
+	    }
 	  else
 	    tls_type = GOT_UNKNOWN;
 	  if (tls_type == GOT_TLS_IE)
@@ -3657,6 +3674,8 @@
 	    tls_type = _bfd_sparc_elf_hash_entry (h)->tls_type;
 	  else if (local_got_offsets)
 	    tls_type = _bfd_sparc_elf_local_got_tls_type (input_bfd) [r_symndx];
+	  else if (h != NULL)
+	    tls_type = _bfd_sparc_elf_hash_entry(h)->tls_type;
 	  else
 	    tls_type = GOT_UNKNOWN;
 	  /* GD -> IE or LE */
diff -rNU3 a/bfd/i386netbsd.c b/bfd/i386netbsd.c
--- a/bfd/i386netbsd.c	1970-01-01 09:00:00.000000000 +0900
+++ b/bfd/i386netbsd.c	2022-12-26 05:05:49.000000000 +0900
@@ -0,0 +1,38 @@
+/* BFD back-end for NetBSD/386 a.out-ish binaries.
+   Copyright (C) 1990-2016 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA. */
+
+#define	BYTES_IN_WORD	4
+#undef TARGET_IS_BIG_ENDIAN_P
+
+#define	TARGET_PAGE_SIZE	4096
+#define	SEGMENT_SIZE	TARGET_PAGE_SIZE
+
+#define	DEFAULT_ARCH	bfd_arch_i386
+#define	DEFAULT_MID 	M_386_NETBSD
+
+/* Do not "beautify" the CONCAT* macro args.  Traditional C will not
+   remove whitespace added here, and thus will fail to concatenate
+   the tokens.  */
+#define MY(OP) CONCAT2 (i386_aout_nbsd_,OP)
+
+/* This needs to start with a.out so GDB knows it is an a.out variant.  */
+#define TARGETNAME "a.out-i386-netbsd"
+
+#include "netbsd.h"
diff -rNU3 a/bfd/libbfd.h b/bfd/libbfd.h
--- a/bfd/libbfd.h	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/libbfd.h	2022-12-25 05:17:04.000000000 +0900
@@ -2792,6 +2792,7 @@
   "BFD_RELOC_RELC",
 
   "BFD_RELOC_VAX_GLOB_DAT",
+  "BFD_RELOC_VAX_GLOB_REF",
   "BFD_RELOC_VAX_JMP_SLOT",
   "BFD_RELOC_VAX_RELATIVE",
   "BFD_RELOC_MT_PC16",
diff -rNU3 a/bfd/Makefile.am b/bfd/Makefile.am
--- a/bfd/Makefile.am	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/Makefile.am	2022-12-26 07:34:45.000000000 +0900
@@ -362,6 +362,7 @@
 	i386bsd.lo \
 	i386lynx.lo \
 	i386msdos.lo \
+	i386netbsd.lo \
 	mach-o.lo \
 	mach-o-i386.lo \
 	mach-o-arm.lo \
@@ -494,6 +495,7 @@
 	i386bsd.c \
 	i386lynx.c \
 	i386msdos.c \
+	i386netbsd.c \
 	mach-o.c \
 	mach-o-i386.c \
 	mach-o-arm.c \
@@ -840,59 +842,61 @@
 	$(AM_V_CC)$(LTCOMPILE) -c -o $@ -DDEBUGDIR=\"$(DEBUGDIR)\" $(srcdir)/dwarf2.c
 endif
 
+# change IMPSRC ($<) to ALLSRC ($>) in the following rules so they work with
+# bmake
 elf32-target.h : elfxx-target.h
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< > $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> > $@
 
 elf64-target.h : elfxx-target.h
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< > $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> > $@
 
 elf32-aarch64.c : elfnn-aarch64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-aarch64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-aarch64.c : elfnn-aarch64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-aarch64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-ia64.c : elfnn-ia64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-ia64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-ia64.c : elfnn-ia64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-ia64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-loongarch.c : elfnn-loongarch.c
 	$(AM_V_at)echo "#line 1 \"elfnn-loongarch.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-loongarch.c : elfnn-loongarch.c
 	$(AM_V_at)echo "#line 1 \"elfnn-loongarch.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-riscv.c : elfnn-riscv.c
 	$(AM_V_at)echo "#line 1 \"elfnn-riscv.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-riscv.c : elfnn-riscv.c
 	$(AM_V_at)echo "#line 1 \"elfnn-riscv.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 peigen.c : peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pe/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pe/g < $> >> $@
 
 pepigen.c : peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pep/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pep/g < $> >> $@
 
 pex64igen.c: peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pex64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pex64/g < $> >> $@
 
 pe-aarch64igen.c: peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/peAArch64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/peAArch64/g < $> >> $@
 
 host-aout.lo: Makefile
 
@@ -1006,4 +1010,6 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $< $(NO_WERROR)
 
-include doc/local.mk
+# Comment out the doc snippet because it has pattern rules our make does not
+# understand
+#include doc/local.mk
diff -rNU3 a/bfd/Makefile.in b/bfd/Makefile.in
--- a/bfd/Makefile.in	2022-08-05 18:53:59.000000000 +0900
+++ b/bfd/Makefile.in	2023-01-03 05:49:59.000000000 +0900
@@ -608,6 +608,7 @@
 	cpu-nfp.lo \
 	cpu-nios2.lo \
 	cpu-ns32k.lo \
+	cpu-openrisc.lo \
 	cpu-or1k.lo \
 	cpu-pdp11.lo \
 	cpu-pj.lo \
@@ -690,6 +691,7 @@
 	cpu-nds32.c \
 	cpu-nfp.c \
 	cpu-ns32k.c \
+	cpu-openrisc.c \
 	cpu-nios2.c \
 	cpu-or1k.c \
 	cpu-pdp11.c \
@@ -733,6 +735,7 @@
 	coff-go32.lo \
 	coff-i386.lo \
 	coff-mips.lo \
+	coff-or1k.lo \
 	coff-rs6000.lo \
 	coff-sh.lo \
 	coff-stgo32.lo \
@@ -796,6 +799,7 @@
 	elf32-mt.lo \
 	elf32-nds32.lo \
 	elf32-nios2.lo \
+	elf32-openrisc.lo \
 	elf32-or1k.lo \
 	elf32-pj.lo \
 	elf32-ppc.lo \
@@ -825,6 +829,7 @@
 	i386bsd.lo \
 	i386lynx.lo \
 	i386msdos.lo \
+	i386netbsd.lo \
 	mach-o.lo \
 	mach-o-i386.lo \
 	mach-o-arm.lo \
@@ -865,6 +870,7 @@
 	coff-go32.c \
 	coff-i386.c \
 	coff-mips.c \
+	coff-or1k.c \
 	coff-rs6000.c \
 	coff-sh.c \
 	coff-stgo32.c \
@@ -928,6 +934,7 @@
 	elf32-mt.c \
 	elf32-nds32.c \
 	elf32-nios2.c \
+	elf32-openrisc.c \
 	elf32-or1k.c \
 	elf32-pj.c \
 	elf32-ppc.c \
@@ -957,6 +964,7 @@
 	i386bsd.c \
 	i386lynx.c \
 	i386msdos.c \
+	i386netbsd.c \
 	mach-o.c \
 	mach-o-i386.c \
 	mach-o-arm.c \
@@ -1455,6 +1463,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-go32.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-i386.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-mips.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-or1k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-rs6000.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-sh.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coff-stgo32.Plo@am__quote@
@@ -1519,6 +1528,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-nfp.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-nios2.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-ns32k.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-openrisc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-or1k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-pdp11.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-pj.Plo@am__quote@
@@ -1604,8 +1614,10 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-moxie.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-msp430.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-mt.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-or1k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-nds32.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-nios2.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-openrisc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-or1k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-pj.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-ppc.Plo@am__quote@
@@ -1668,6 +1680,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i386bsd.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i386lynx.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i386msdos.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i386netbsd.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ihex.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/irix-core.Plo@am__quote@
@@ -1768,6 +1781,8 @@
 	@: > doc/$(am__dirstamp)
 
 doc/bfd.info: doc/bfd.texi $(doc_bfd_TEXINFOS)
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_doc/bfd.info:
 	@test -f doc/$(am__dirstamp) || $(MAKE) $(AM_MAKEFLAGS) doc/$(am__dirstamp)
 	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
 	rm -rf $$backupdir && mkdir $$backupdir && \
@@ -2348,59 +2363,61 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC)$(LTCOMPILE) -c -o $@ -DDEBUGDIR=\"$(DEBUGDIR)\" $(srcdir)/dwarf2.c
 
+# change IMPSRC ($<) to ALLSRC ($>) in the following rules so they work with
+# bmake
 elf32-target.h : elfxx-target.h
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< > $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> > $@
 
 elf64-target.h : elfxx-target.h
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< > $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> > $@
 
 elf32-aarch64.c : elfnn-aarch64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-aarch64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-aarch64.c : elfnn-aarch64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-aarch64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-ia64.c : elfnn-ia64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-ia64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-ia64.c : elfnn-ia64.c
 	$(AM_V_at)echo "#line 1 \"elfnn-ia64.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-loongarch.c : elfnn-loongarch.c
 	$(AM_V_at)echo "#line 1 \"elfnn-loongarch.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-loongarch.c : elfnn-loongarch.c
 	$(AM_V_at)echo "#line 1 \"elfnn-loongarch.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 elf32-riscv.c : elfnn-riscv.c
 	$(AM_V_at)echo "#line 1 \"elfnn-riscv.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/32/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/32/g < $> >> $@
 
 elf64-riscv.c : elfnn-riscv.c
 	$(AM_V_at)echo "#line 1 \"elfnn-riscv.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/NN/64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/NN/64/g < $> >> $@
 
 peigen.c : peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pe/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pe/g < $> >> $@
 
 pepigen.c : peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pep/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pep/g < $> >> $@
 
 pex64igen.c: peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/pex64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/pex64/g < $> >> $@
 
 pe-aarch64igen.c: peXXigen.c
 	$(AM_V_at)echo "#line 1 \"peXXigen.c\"" > $@
-	$(AM_V_GEN)$(SED) -e s/XX/peAArch64/g < $< >> $@
+	$(AM_V_GEN)$(SED) -e s/XX/peAArch64/g < $> >> $@
 
 host-aout.lo: Makefile
 
@@ -2486,12 +2503,14 @@
 	  doc/chw$$$$$(EXEEXT_FOR_BUILD) $(MKDOC) && \
 	touch $@
 
-.PRECIOUS: doc/%.stamp
-doc/%.texi: doc/%.stamp ; @true
-doc/%.stamp: $(srcdir)/%.h $(srcdir)/doc/doc.str $(MKDOC) doc/$(am__dirstamp)
-	$(AM_V_GEN)$(REGEN_TEXI)
-doc/%.stamp: $(srcdir)/%.c $(srcdir)/doc/doc.str $(MKDOC) doc/$(am__dirstamp)
-	$(AM_V_GEN)$(REGEN_TEXI)
+# Comment out the doc snippet because it has pattern rules our make does not
+# understand
+#.PRECIOUS: doc/%.stamp
+#doc/%.texi: doc/%.stamp ; @true
+#doc/%.stamp: $(srcdir)/%.h $(srcdir)/doc/doc.str $(MKDOC) doc/$(am__dirstamp)
+#	$(AM_V_GEN)$(REGEN_TEXI)
+#doc/%.stamp: $(srcdir)/%.c $(srcdir)/doc/doc.str $(MKDOC) doc/$(am__dirstamp)
+#	$(AM_V_GEN)$(REGEN_TEXI)
 
 # Avoid the %.stamp generating a builddir/bfd.texi that overrides the
 # srcdir/ as well as regenerating doc/bfd.info for each make run.
@@ -2503,6 +2522,8 @@
 	$(AM_V_GEN)$(REGEN_TEXI)
 
 doc/bfdver.texi: $(srcdir)/Makefile.in
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_bfdver.texi:
 	$(AM_V_GEN)\
 	$(MKDIR_P) $(@D); \
 	echo "@set VERSION $(VERSION)" > $@; \
diff -rNU3 a/bfd/reloc.c b/bfd/reloc.c
--- a/bfd/reloc.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/reloc.c	2022-12-25 05:17:04.000000000 +0900
@@ -1696,6 +1696,17 @@
   Relocations used by 68K ELF.
 
 ENUM
+  BFD_RELOC_VAX_GLOB_DAT
+ENUMX
+  BFD_RELOC_VAX_GLOB_REF
+ENUMX
+  BFD_RELOC_VAX_JMP_SLOT
+ENUMX
+  BFD_RELOC_VAX_RELATIVE
+ENUMDOC
+  Relocations used by VAX ELF.
+
+ENUM
   BFD_RELOC_32_BASEREL
 ENUMX
   BFD_RELOC_16_BASEREL
diff -rNU3 a/bfd/targets.c b/bfd/targets.c
--- a/bfd/targets.c	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/targets.c	2022-12-25 05:17:04.000000000 +0900
@@ -741,6 +741,7 @@
 extern const bfd_target i386_aout_vec;
 extern const bfd_target i386_aout_bsd_vec;
 extern const bfd_target i386_aout_lynx_vec;
+extern const bfd_target i386_aout_nbsd_vec;
 extern const bfd_target i386_coff_vec;
 extern const bfd_target i386_coff_go32_vec;
 extern const bfd_target i386_coff_go32stubbed_vec;
diff -rNU3 a/bfd/version.h b/bfd/version.h
--- a/bfd/version.h	2022-08-05 16:38:29.000000000 +0900
+++ b/bfd/version.h	2022-12-26 05:04:03.000000000 +0900
@@ -18,5 +18,5 @@
    sonames.  */
 #define BFD_VERSION_DATE 20220805
 #define BFD_VERSION @bfd_version@
-#define BFD_VERSION_STRING  @bfd_version_package@ @bfd_version_string@
+#define BFD_VERSION_STRING  @bfd_version_package@ " " @bfd_version_string@
 #define REPORT_BUGS_TO @report_bugs_to@
diff -rNU3 a/bfd/warning.m4 b/bfd/warning.m4
--- a/bfd/warning.m4	2022-07-08 18:46:47.000000000 +0900
+++ b/bfd/warning.m4	2023-01-16 08:10:52.000000000 +0900
@@ -50,7 +50,7 @@
 AC_EGREP_CPP([(^[0-3]$|^__GNUC__$)],[__GNUC__],,GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wshadow")
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-AC_EGREP_CPP([(^[0-4]$|^__GNUC__$)],[__GNUC__],,GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144")
+#AC_EGREP_CPP([(^[0-4]$|^__GNUC__$)],[__GNUC__],,GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144")
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
 WARN_WRITE_STRINGS=""
diff -rNU3 a/binutils/bucomm.c b/binutils/bucomm.c
--- a/binutils/bucomm.c	2022-07-08 18:46:47.000000000 +0900
+++ b/binutils/bucomm.c	2022-12-25 05:17:05.000000000 +0900
@@ -629,7 +629,14 @@
   else if (S_ISDIR (statbuf.st_mode))
     non_fatal (_("Warning: '%s' is a directory"), file_name);
   else if (! S_ISREG (statbuf.st_mode))
-    non_fatal (_("Warning: '%s' is not an ordinary file"), file_name);
+    {
+      if (!S_ISCHR(statbuf.st_mode))
+	{
+	  non_fatal (_("Warning: '%s' is not an ordinary file"), file_name);
+	  return 0;
+	}
+      return statbuf.st_size ? statbuf.st_size : 1;
+    }
   else if (statbuf.st_size < 0)
     non_fatal (_("Warning: '%s' has negative size, probably it is too large"),
                file_name);
diff -rNU3 a/binutils/configure b/binutils/configure
--- a/binutils/configure	2022-08-05 18:56:21.000000000 +0900
+++ b/binutils/configure	2023-01-16 08:10:52.000000000 +0900
@@ -12107,17 +12107,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -12152,17 +12152,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
diff -rNU3 a/binutils/Makefile.in b/binutils/Makefile.in
--- a/binutils/Makefile.in	2022-08-05 18:56:21.000000000 +0900
+++ b/binutils/Makefile.in	2022-12-31 00:41:35.000000000 +0900
@@ -193,7 +193,7 @@
 am__EXEEXT_17 = $(am__EXEEXT_14) $(am__EXEEXT_15) $(am__EXEEXT_16)
 am__EXEEXT_18 = bfdtest1$(EXEEXT)
 am__EXEEXT_19 = bfdtest2$(EXEEXT)
-am__EXEEXT_20 = testsuite/gentestdlls$(EXEEXT)
+#am__EXEEXT_20 = testsuite/gentestdlls$(EXEEXT)
 am__EXEEXT_21 = $(am__EXEEXT_18) $(am__EXEEXT_19) $(am__EXEEXT_20)
 PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
 am__objects_1 = bucomm.$(OBJEXT) version.$(OBJEXT) filemode.$(OBJEXT)
@@ -611,6 +611,7 @@
 libexecdir = @libexecdir@
 localedir = @localedir@
 localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
 mandir = @mandir@
 mkdir_p = @mkdir_p@
 oldincludedir = @oldincludedir@
@@ -680,7 +681,7 @@
 EXTRA_SCRIPTS = embedspu
 BFDTEST1_PROG = bfdtest1
 BFDTEST2_PROG = bfdtest2
-GENTESTDLLS_PROG = testsuite/gentestdlls
+#GENTESTDLLS_PROG = testsuite/gentestdlls
 TEST_PROGS = $(BFDTEST1_PROG) $(BFDTEST2_PROG) $(GENTESTDLLS_PROG)
 RENAMED_PROGS = $(NM_PROG) $(STRIP_PROG) $(DEMANGLER_PROG)
 
@@ -1885,7 +1886,7 @@
 	$(AM_V_CC)if [ -r sysinfo.c ]; then \
 	  $(CC_FOR_BUILD) -c -I. $(AM_CFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(NO_WERROR) sysinfo.c ; \
 	else \
-	  $(CC_FOR_BUILD) -c -I. $(AM_CFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(NO_WERROR) $(srcdir)/sysinfo.c ; \
+	  $(CC_FOR_BUILD) $(CPPFLAGS) -c -I. $(AM_CFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(NO_WERROR) $(srcdir)/sysinfo.c ; \
 	fi
 
 bin2c$(EXEEXT_FOR_BUILD): bin2c.c
@@ -2022,120 +2023,120 @@
 	done
 
 # Man page generation from texinfo
-doc/addr2line.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Daddr2line < $(binutils_TEXI) > addr2line.pod
-	$(AM_V_at)-($(POD2MAN) addr2line.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f addr2line.pod
-
-doc/ar.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dar < $(binutils_TEXI) > ar.pod
-	$(AM_V_at)-($(POD2MAN) ar.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f ar.pod
-
-doc/dlltool.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Ddlltool < $(binutils_TEXI) > dlltool.pod
-	$(AM_V_at)-($(POD2MAN) dlltool.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f dlltool.pod
-
-doc/nm.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dnm < $(binutils_TEXI) > nm.pod
-	$(AM_V_at)-($(POD2MAN) nm.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f nm.pod
-
-doc/objcopy.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dobjcopy < $(binutils_TEXI) > objcopy.pod
-	$(AM_V_at)-($(POD2MAN) objcopy.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f objcopy.pod
-
-doc/objdump.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dobjdump < $(binutils_TEXI) > objdump.pod
-	$(AM_V_at)-($(POD2MAN) objdump.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f objdump.pod
-
-doc/ranlib.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dranlib < $(binutils_TEXI) > ranlib.pod
-	$(AM_V_at)-($(POD2MAN) ranlib.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f ranlib.pod
-
-doc/readelf.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dreadelf < $(binutils_TEXI) > readelf.pod
-	$(AM_V_at)-($(POD2MAN) readelf.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f readelf.pod
-
-doc/size.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dsize < $(binutils_TEXI) > size.pod
-	$(AM_V_at)-($(POD2MAN) size.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f size.pod
-
-doc/strings.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dstrings < $(binutils_TEXI) > strings.pod
-	$(AM_V_at)-($(POD2MAN) strings.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f strings.pod
-
-doc/strip.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dstrip < $(binutils_TEXI) > strip.pod
-	$(AM_V_at)-($(POD2MAN) strip.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f strip.pod
-
-doc/elfedit.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Delfedit < $(binutils_TEXI) > elfedit.pod
-	$(AM_V_at)-($(POD2MAN) elfedit.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f elfedit.pod
-
-doc/windres.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dwindres < $(binutils_TEXI) > windres.pod
-	$(AM_V_at)-($(POD2MAN) windres.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f windres.pod
-
-doc/windmc.1:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dwindmc < $(binutils_TEXI) > windmc.pod
-	$(AM_V_at)-($(POD2MAN) windmc.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f windmc.pod
-
-doc/cxxfilt.man:	$(binutils_TEXI) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dcxxfilt < $(binutils_TEXI) > $(DEMANGLER_NAME).pod
-	$(AM_V_at)-($(POD2MAN) $(DEMANGLER_NAME).pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
-		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f $(DEMANGLER_NAME).pod
-
-doc/$(DEMANGLER_NAME).1: doc/cxxfilt.man Makefile doc/$(am__dirstamp)
-	$(AM_V_GEN)if test -f doc/cxxfilt.man; then \
-	  man=doc/cxxfilt.man; \
-	else \
-	  man=$(srcdir)/doc/cxxfilt.man; \
-	fi; \
-	sed -e 's/@PROGRAM@/$(DEMANGLER_NAME)/' \
-	    -e 's/cxxfilt/$(DEMANGLER_NAME)/' < $$man \
-		> doc/$(DEMANGLER_NAME).1
+#doc/addr2line.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Daddr2line < $(binutils_TEXI) > addr2line.pod
+#	$(AM_V_at)-($(POD2MAN) addr2line.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f addr2line.pod
+#
+#doc/ar.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dar < $(binutils_TEXI) > ar.pod
+#	$(AM_V_at)-($(POD2MAN) ar.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f ar.pod
+#
+#doc/dlltool.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Ddlltool < $(binutils_TEXI) > dlltool.pod
+#	$(AM_V_at)-($(POD2MAN) dlltool.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f dlltool.pod
+#
+#doc/nm.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dnm < $(binutils_TEXI) > nm.pod
+#	$(AM_V_at)-($(POD2MAN) nm.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f nm.pod
+#
+#doc/objcopy.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dobjcopy < $(binutils_TEXI) > objcopy.pod
+#	$(AM_V_at)-($(POD2MAN) objcopy.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f objcopy.pod
+#
+#doc/objdump.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dobjdump < $(binutils_TEXI) > objdump.pod
+#	$(AM_V_at)-($(POD2MAN) objdump.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f objdump.pod
+#
+#doc/ranlib.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dranlib < $(binutils_TEXI) > ranlib.pod
+#	$(AM_V_at)-($(POD2MAN) ranlib.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f ranlib.pod
+#
+#doc/readelf.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dreadelf < $(binutils_TEXI) > readelf.pod
+#	$(AM_V_at)-($(POD2MAN) readelf.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f readelf.pod
+#
+#doc/size.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dsize < $(binutils_TEXI) > size.pod
+#	$(AM_V_at)-($(POD2MAN) size.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f size.pod
+#
+#doc/strings.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dstrings < $(binutils_TEXI) > strings.pod
+#	$(AM_V_at)-($(POD2MAN) strings.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f strings.pod
+#
+#doc/strip.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dstrip < $(binutils_TEXI) > strip.pod
+#	$(AM_V_at)-($(POD2MAN) strip.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f strip.pod
+#
+#doc/elfedit.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Delfedit < $(binutils_TEXI) > elfedit.pod
+#	$(AM_V_at)-($(POD2MAN) elfedit.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f elfedit.pod
+#
+#doc/windres.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dwindres < $(binutils_TEXI) > windres.pod
+#	$(AM_V_at)-($(POD2MAN) windres.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f windres.pod
+#
+#doc/windmc.1:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dwindmc < $(binutils_TEXI) > windmc.pod
+#	$(AM_V_at)-($(POD2MAN) windmc.pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f windmc.pod
+#
+#doc/cxxfilt.man:	$(binutils_TEXI) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) -Dcxxfilt < $(binutils_TEXI) > $(DEMANGLER_NAME).pod
+#	$(AM_V_at)-($(POD2MAN) $(DEMANGLER_NAME).pod | sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#		mv -f $@.T$$$$ $@) || (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f $(DEMANGLER_NAME).pod
+#
+#doc/$(DEMANGLER_NAME).1: doc/cxxfilt.man Makefile doc/$(am__dirstamp)
+#	$(AM_V_GEN)if test -f doc/cxxfilt.man; then \
+#	  man=doc/cxxfilt.man; \
+#	else \
+#	  man=$(srcdir)/doc/cxxfilt.man; \
+#	fi; \
+#	sed -e 's/@PROGRAM@/$(DEMANGLER_NAME)/' \
+#	    -e 's/cxxfilt/$(DEMANGLER_NAME)/' < $$man \
+#		> doc/$(DEMANGLER_NAME).1
 
 html-local: doc/binutils/index.html
 doc/binutils/index.html: doc/binutils.texi $(binutils_TEXINFOS)
diff -rNU3 a/binutils/readelf.c b/binutils/readelf.c
--- a/binutils/readelf.c	2022-07-08 18:46:47.000000000 +0900
+++ b/binutils/readelf.c	2022-12-25 05:17:05.000000000 +0900
@@ -244,6 +244,7 @@
 static bool do_demangle = false;	/* Pretty print C++ symbol names.  */
 static bool process_links = false;
 static bool dump_any_debugging = false;
+static bool do_special_files = false;
 static int demangle_flags = DMGL_ANSI | DMGL_PARAMS;
 static int sym_base = 0;
 
@@ -5424,7 +5425,7 @@
     usage (stderr);
 
   while ((c = getopt_long
-	  (argc, argv, "ACDHILNPR:STU:VWacdeghi:lnp:rstuvw::x:z", options, NULL)) != EOF)
+	  (argc, argv, "ACDHILNPR:STU:VWacdefghi:lnp:rstuvw::x:z", options, NULL)) != EOF)
     {
       switch (c)
 	{
@@ -5475,6 +5476,9 @@
 	case 'u':
 	  do_unwind = true;
 	  break;
+	case 'f':
+	  do_special_files = true;
+	  break;
 	case 'h':
 	  do_header = true;
 	  break;
@@ -6047,7 +6051,7 @@
       if (filedata->file_header.e_phnum > 1)
 	printf (_("\nProgram Headers:\n"));
       else
-	printf (_("\nProgram Headers:\n"));
+	printf (_("\nProgram Header:\n"));
 
       if (is_32bit_elf)
 	printf
@@ -22722,7 +22726,7 @@
       return false;
     }
 
-  if (! S_ISREG (statbuf.st_mode))
+  if (!do_special_files && ! S_ISREG (statbuf.st_mode))
     {
       error (_("'%s' is not an ordinary file\n"), file_name);
       return false;
diff -rNU3 a/config.sub b/config.sub
--- a/config.sub	2022-07-08 18:46:47.000000000 +0900
+++ b/config.sub	2022-12-25 05:17:03.000000000 +0900
@@ -1216,6 +1216,7 @@
 			| mips | mipsbe | mipseb | mipsel | mipsle \
 			| mips16 \
 			| mips64 | mips64eb | mips64el \
+			| mipsn64 | mipsn64eb | mipsn64el \
 			| mips64octeon | mips64octeonel \
 			| mips64orion | mips64orionel \
 			| mips64r5900 | mips64r5900el \
diff -rNU3 a/gas/app.c b/gas/app.c
--- a/gas/app.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/app.c	2023-01-30 08:39:12.000000000 +0900
@@ -1537,3 +1537,16 @@
     last_char = to[-1];
   return to - tostart;
 }
+
+/* Return amount of pending input.  */
+
+size_t
+do_scrub_pending (void)
+{
+  size_t len = 0;
+  if (saved_input)
+    len += saved_input_len;
+  if (state == -1)
+    len += strlen (out_string);
+  return len;
+}
diff -rNU3 a/gas/as.h b/gas/as.h
--- a/gas/as.h	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/as.h	2023-01-30 08:39:12.000000000 +0900
@@ -460,6 +460,7 @@
 char * input_scrub_new_file (const char *);
 char * input_scrub_next_buffer (char **bufp);
 size_t do_scrub_chars (size_t (*get) (char *, size_t), char *, size_t);
+size_t do_scrub_pending (void);
 bool   scan_for_multibyte_characters (const unsigned char *, const unsigned char *, bool);
 int    gen_to_words (LITTLENUM_TYPE *, int, long);
 int    had_err (void);
diff -rNU3 a/gas/config/atof-vax.c b/gas/config/atof-vax.c
--- a/gas/config/atof-vax.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/atof-vax.c	2022-12-25 05:17:06.000000000 +0900
@@ -267,10 +267,27 @@
 	  int exponent_skippage;
 	  LITTLENUM_TYPE word1;
 
-	  /* JF: Deal with new Nan, +Inf and -Inf codes.  */
 	  if (f->sign != '-' && f->sign != '+')
 	    {
-	      make_invalid_floating_point_number (words);
+	      if (f->sign == 0)
+		{
+		  /* All NaNs are 0.  */
+		  memset (words, 0x00, sizeof (LITTLENUM_TYPE) * precision);
+		}
+	      else if (f->sign == 'P')
+		{
+		  /* Positive Infinity.  */
+		  memset (words, 0xff, sizeof (LITTLENUM_TYPE) * precision);
+		  words[0] &= 0x7fff;
+		}
+	      else if (f->sign == 'N')
+		{
+		  /* Negative Infinity.  */
+		  memset (words, 0x00, sizeof (LITTLENUM_TYPE) * precision);
+		  words[0] = 0x0080;
+		}
+	      else
+		make_invalid_floating_point_number (words);
 	      return return_value;
 	    }
 
diff -rNU3 a/gas/config/obj-elf.c b/gas/config/obj-elf.c
--- a/gas/config/obj-elf.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/obj-elf.c	2023-01-26 04:08:41.000000000 +0900
@@ -2395,10 +2395,12 @@
 	  && bed->elf_osabi != ELFOSABI_FREEBSD)
 	as_bad (_("symbol type \"%s\" is supported only by GNU "
 		  "and FreeBSD targets"), type_name);
+#ifndef __NetBSD__
       /* MIPS targets do not support IFUNCS.  */
       else if (bed->target_id == MIPS_ELF_DATA)
 	as_bad (_("symbol type \"%s\" is not supported by "
                     "MIPS targets"), type_name);
+#endif
       elf_tdata (stdoutput)->has_gnu_osabi |= elf_gnu_osabi_ifunc;
       type = BSF_FUNCTION | BSF_GNU_INDIRECT_FUNCTION;
     }
diff -rNU3 a/gas/config/tc-arm.c b/gas/config/tc-arm.c
--- a/gas/config/tc-arm.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-arm.c	2022-12-25 05:17:06.000000000 +0900
@@ -23723,16 +23723,20 @@
   asection *sect;
 
   for (sect = stdoutput->sections; sect != NULL; sect = sect->next)
-    if (seg_info (sect)->tc_segment_info_data.current_pred.state
-	== MANUAL_PRED_BLOCK)
-      {
-	if (now_pred.type == SCALAR_PRED)
-	  as_warn (_("section '%s' finished with an open IT block."),
-		   sect->name);
-	else
-	  as_warn (_("section '%s' finished with an open VPT/VPST block."),
+    {
+      segment_info_type *seginfo = seg_info (sect);
+
+      if (seginfo && seginfo->tc_segment_info_data.current_pred.state
+	  == MANUAL_PRED_BLOCK)
+	{
+	  if (now_pred.type == SCALAR_PRED)
+	    as_warn (_("section '%s' finished with an open IT block."),
+		     sect->name);
+	  else
+	    as_warn (_("section '%s' finished with an open VPT/VPST block."),
 		   sect->name);
-      }
+	}
+    }
 #else
   if (now_pred.state == MANUAL_PRED_BLOCK)
     {
diff -rNU3 a/gas/config/tc-m68k.c b/gas/config/tc-m68k.c
--- a/gas/config/tc-m68k.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-m68k.c	2022-12-25 05:17:06.000000000 +0900
@@ -7265,7 +7265,7 @@
     {
       if (arg[0] == 'm')
 	{
-	  if (arg[1] == '6')
+	  if (arg[1] == '6' || arg[1] == '5')
 	    arg += 1;
 	  else if (arg[1] == 'c'  && arg[2] == '6')
 	    arg += 2;
diff -rNU3 a/gas/config/tc-mips.c b/gas/config/tc-mips.c
--- a/gas/config/tc-mips.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-mips.c	2022-12-25 05:17:06.000000000 +0900
@@ -933,6 +933,9 @@
   NUM_FIX_VR4120_CLASSES
 };
 
+/* ...likewise -mtrap-zero-jump.  */
+static bfd_boolean mips_trap_zero_jump;
+
 /* ...likewise -mfix-loongson2f-jump.  */
 static bool mips_fix_loongson2f_jump;
 
@@ -976,6 +979,8 @@
 
 static int mips_relax_branch;
 
+static int mips_fix_loongson2f_btb;
+
 /* TRUE if checks are suppressed for invalid branches between ISA modes.
    Needed for broken assembly produced by some GCC versions and some
    sloppy code out there, where branches to data labels are present.  */
@@ -1369,6 +1374,7 @@
 static void mips16_macro_build
   (expressionS *, const char *, const char *, va_list *);
 static void load_register (int, expressionS *, int);
+static void macro_build (expressionS *, const char *, const char *, ...);
 static void macro_start (void);
 static void macro_end (void);
 static void macro (struct mips_cl_insn *ip, char *str);
@@ -1573,6 +1579,8 @@
     OPTION_NO_LOONGSON_EXT,
     OPTION_LOONGSON_EXT2,
     OPTION_NO_LOONGSON_EXT2,
+    OPTION_FIX_LOONGSON2F_BTB,
+    OPTION_NO_FIX_LOONGSON2F_BTB,
     OPTION_END_OF_ENUM
   };
 
@@ -1662,6 +1670,8 @@
   {"mno-fix-loongson2f-jump", no_argument, NULL, OPTION_NO_FIX_LOONGSON2F_JUMP},
   {"mfix-loongson2f-nop", no_argument, NULL, OPTION_FIX_LOONGSON2F_NOP},
   {"mno-fix-loongson2f-nop", no_argument, NULL, OPTION_NO_FIX_LOONGSON2F_NOP},
+  {"mfix-loongson2f-btb", no_argument, NULL, OPTION_FIX_LOONGSON2F_BTB},
+  {"mno-fix-loongson2f-btb", no_argument, NULL, OPTION_NO_FIX_LOONGSON2F_BTB},
   {"mfix-vr4120",    no_argument, NULL, OPTION_FIX_VR4120},
   {"mno-fix-vr4120", no_argument, NULL, OPTION_NO_FIX_VR4120},
   {"mfix-vr4130",    no_argument, NULL, OPTION_FIX_VR4130},
@@ -5606,6 +5616,8 @@
       if ((reglist & 0x3f00ffff) != 0)
 	return false;
 
+
+/* Fix NOP issue: Replace nops by "or at,at,zero".  */
       ra = (reglist >> 27) & 0x10;
       sregs = ((reglist >> 22) & 0x100) | ((reglist >> 16) & 0xff);
     }
@@ -5617,6 +5629,35 @@
   return true;
 }
 
+static void
+trap_zero_jump (struct mips_cl_insn * ip)
+{
+  if (strcmp (ip->insn_mo->name, "j") == 0
+      || strcmp (ip->insn_mo->name, "jr") == 0
+      || strcmp (ip->insn_mo->name, "jalr") == 0)
+    {
+      int sreg;
+
+      if (mips_opts.warn_about_macros)
+        return;
+
+      sreg = EXTRACT_OPERAND (0, RS, *ip);
+      if (mips_opts.isa == ISA_MIPS32
+          || mips_opts.isa == ISA_MIPS32R2
+          || mips_opts.isa == ISA_MIPS64
+          || mips_opts.isa == ISA_MIPS64R2)  
+	{
+	  expressionS ep;
+	  ep.X_op = O_constant;
+	  ep.X_add_number = 4096;
+	  macro_build (&ep, "tltiu", "s,j", sreg, BFD_RELOC_LO16);
+	}
+      else if (mips_opts.isa != ISA_UNKNOWN
+	       && mips_opts.isa != ISA_MIPS1)
+	macro_build (NULL, "teq", "s,t", sreg, 0);
+  }
+}
+
 /* OP_ENTRY_EXIT_LIST matcher.  */
 
 static unsigned int
@@ -5830,6 +5871,13 @@
     }
   frame_size /= 8;
 
+  /* If the branch is itself the target of a branch, we can not swap.
+     We cheat on this; all we check for is whether there is a label on
+     this instruction.  If there are any branches to anything other than
+     a label, users must use .set noreorder.  */
+  if (seg_info (now_seg)->label_list)
+    return FALSE;
+
   /* Finally build the instruction.  */
   if (mips_opts.mips16)
     opcode |= mips16_encode_save_restore (arg_mask, num_sregs, ra, s0, s1,
@@ -7067,6 +7115,11 @@
   if (mips_opts.mips16 && history[0].fixp[0])
     return false;
 
+  if (mips_fix_loongson2f)
+    fix_loongson2f (ip);
+  if (mips_trap_zero_jump)
+    trap_zero_jump (ip);
+
   /* If the branch is itself the target of a branch, we can not swap.
      We cheat on this; all we check for is whether there is a label on
      this instruction.  If there are any branches to anything other than
@@ -7215,6 +7268,45 @@
   return true;
 }
 
+/* Fix jump through register issue on loongson2f processor for kernel code:
+   force a BTB clear before the jump to prevent it from being incorrectly
+   prefetched by the branch prediction engine. */
+
+static void
+macro_build_jrpatch (expressionS *ep, unsigned int sreg)
+{
+  if (!mips_fix_loongson2f_btb)
+    return;
+
+  if (sreg == ZERO || sreg == KT0 || sreg == KT1 || sreg == AT)
+    return;
+
+  if (!mips_opts.at)
+    {
+      as_warn (_("unable to apply loongson2f BTB workaround when .set noat"));
+      return;
+    }
+
+  /* li $at, COP_0_BTB_CLEAR | COP_0_RAS_DISABLE */
+  ep->X_op = O_constant;
+  ep->X_add_number = 3;
+  macro_build (ep, "ori", "t,r,i", AT, ZERO, BFD_RELOC_LO16);
+
+  /* dmtc0 $at, COP_0_DIAG */
+  macro_build (NULL, "dmtc0", "t,G", AT, 22);
+
+  /* Hide these two instructions to avoid getting a ``macro expanded into
+     multiple instructions'' warning. */
+  if (mips_relax.sequence != 2) {
+    mips_macro_warning.sizes[0] -= 2 * 4;
+    mips_macro_warning.insns[0] -= 2;
+  }
+  if (mips_relax.sequence != 1) {
+    mips_macro_warning.sizes[1] -= 2 * 4;
+    mips_macro_warning.insns[1] -= 2;
+  }
+}
+
 /* Decide how we should add IP to the instruction stream.
    ADDRESS_EXPR is an operand of the instruction to be used with
    RELOC_TYPE.  */
@@ -11578,6 +11670,26 @@
 	macro_build (NULL, ADDRESS_ADD_INSN, "d,v,t", op[0], tempreg, breg);
       break;
 
+    case M_JR_S:
+      macro_build_jrpatch (&expr1, op[2]);
+      macro_build (NULL, "jr", "s", op[2]);
+      return;	/* didn't modify $at */
+
+    case M_J_S:
+      macro_build_jrpatch (&expr1, op[2]);
+      macro_build (NULL, "j", "s", op[2]);
+      return;	/* didn't modify $at */
+
+    case M_JALR_S:
+      macro_build_jrpatch (&expr1, op[2]);
+      macro_build (NULL, "jalr", "s", op[2]);
+      return;	/* didn't modify $at */
+
+    case M_JALR_DS:
+      macro_build_jrpatch (&expr1, op[2]);
+      macro_build (NULL, "jalr", "d,s", op[0], op[2]);
+      return;	/* didn't modify $at */
+
     case M_MSGSND:
       gas_assert (!mips_opts.micromips);
       macro_build (NULL, "c2", "C", (op[0] << 16) | 0x01);
@@ -15015,6 +15127,14 @@
       mips_fix_vr4130 = 0;
       break;
 
+    case OPTION_FIX_LOONGSON2F_BTB:
+      mips_fix_loongson2f_btb = 1;
+      break;
+
+    case OPTION_NO_FIX_LOONGSON2F_BTB:
+      mips_fix_loongson2f_btb = 0;
+      break;
+
     case OPTION_FIX_CN63XXP1:
       mips_fix_cn63xxp1 = true;
       break;
@@ -20437,6 +20557,7 @@
   fprintf (stream, _("\
 -mfix-loongson2f-jump	work around Loongson2F JUMP instructions\n\
 -mfix-loongson2f-nop	work around Loongson2F NOP errata\n\
+-mfix-loongson2f-btb	work around Loongson2F BTB errata\n\
 -mfix-loongson3-llsc	work around Loongson3 LL/SC errata\n\
 -mno-fix-loongson3-llsc	disable work around Loongson3 LL/SC errata\n\
 -mfix-vr4120		work around certain VR4120 errata\n\
diff -rNU3 a/gas/config/tc-mips.h b/gas/config/tc-mips.h
--- a/gas/config/tc-mips.h	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-mips.h	2022-12-25 05:17:06.000000000 +0900
@@ -187,7 +187,7 @@
 #define DWARF2_ADDR_SIZE(bfd) mips_dwarf2_addr_size ()
 #define DWARF2_FDE_RELOC_SIZE (compact_eh ? 4 : mips_dwarf2_addr_size ())
 #define DWARF2_FDE_RELOC_ENCODING(enc) \
-  (enc | (compact_eh ? DW_EH_PE_pcrel : 0))
+  (compact_eh ? (enc)|DW_EH_PE_pcrel : DW_EH_PE_absptr)
 
 #define TARGET_USE_CFIPOP 1
 
diff -rNU3 a/gas/config/tc-vax.c b/gas/config/tc-vax.c
--- a/gas/config/tc-vax.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-vax.c	2022-12-25 05:17:06.000000000 +0900
@@ -22,6 +22,7 @@
 
 #include "vax-inst.h"
 #include "obstack.h"		/* For FRAG_APPEND_1_CHAR macro in "frags.h" */
+#include "dw2gencfi.h"
 #include "subsegs.h"
 #include "safe-ctype.h"
 
@@ -396,6 +397,9 @@
 	      && (PLT_symbol == NULL || fragP->fr_symbol != PLT_symbol)
 	      && fragP->fr_symbol != NULL
 	      && flag_want_pic
+#ifdef OBJ_ELF
+	      && ELF_ST_VISIBILITY (S_GET_OTHER (fragP->fr_symbol)) != STV_HIDDEN
+#endif
 	      && (!S_IS_DEFINED (fragP->fr_symbol)
 	          || S_IS_WEAK (fragP->fr_symbol)
 	          || S_IS_EXTERNAL (fragP->fr_symbol)))
@@ -1076,6 +1080,154 @@
   return retval;
 }
 
+#ifdef OBJ_AOUT
+#ifndef BFD_ASSEMBLER
+void
+tc_aout_fix_to_chars (where, fixP, segment_address_in_file)
+     char *where;
+     fixS *fixP;
+     relax_addressT segment_address_in_file;
+{
+  /*
+   * In: length of relocation (or of address) in chars: 1, 2 or 4.
+   * Out: GNU LD relocation length code: 0, 1, or 2.
+   */
+
+  static const unsigned char nbytes_r_length[] = {42, 0, 1, 42, 2};
+  int r_symbolnum;
+  int r_flags;
+
+  know (fixP->fx_addsy != NULL);
+
+  md_number_to_chars (where,
+       fixP->fx_frag->fr_address + fixP->fx_where - segment_address_in_file,
+		      4);
+
+  r_symbolnum = (S_IS_DEFINED (fixP->fx_addsy)
+		 ? S_GET_TYPE (fixP->fx_addsy)
+		 : fixP->fx_addsy->sy_number);
+  r_flags = (fixP->fx_pcrel ? 1 : 0)
+      | (!S_IS_DEFINED (fixP->fx_addsy) ? 8 : 0)	/* extern */
+      | ((nbytes_r_length[fixP->fx_size] & 3) << 1);
+
+#if 0
+  r_flags |= ((!S_IS_DEFINED(fixP->fx_addsy)
+      && fixP->fx_pcrel
+      && fixP->fx_addsy != GOT_symbol
+      && fixP->fx_addsy != PLT_symbol
+      && flags_want_pic) ? 0x10 : 0);
+#endif
+	
+  switch (fixP->fx_r_type) {
+	case NO_RELOC:
+		break;
+	case NO_RELOC2:
+		if (r_flags & 8)
+		    r_flags |= 0x80;		/* setting the copy bit */
+						/*   says we can convert */
+						/*   to gotslot if needed */
+		break;
+	case RELOC_32:
+		if (flag_want_pic && S_IS_EXTERNAL(fixP->fx_addsy)) {
+			r_symbolnum = fixP->fx_addsy->sy_number;  
+			r_flags |= 8;		/* set extern bit */
+		}
+		break;
+	case RELOC_JMP_SLOT:
+		if (flag_want_pic) {
+			r_flags |= 0x20;	/* set jmptable */
+			r_flags &= ~0x08;	/* clear extern bit */
+		}
+		break;
+	case RELOC_JMP_TBL:
+		if (flag_want_pic) {
+			r_flags |= 0x20;	/* set jmptable */
+			r_flags |= 0x08;	/* set extern bit */
+		}
+		break;
+	case RELOC_GLOB_DAT:
+		if (flag_want_pic) {
+			r_flags |= 0x10;	/* set baserel bit */
+			r_symbolnum = fixP->fx_addsy->sy_number;
+			if (S_IS_EXTERNAL(fixP->fx_addsy))
+				r_flags |= 8;	/* set extern bit */
+		}
+		break;
+  }
+
+  where[4] = (r_symbolnum >>  0) & 0xff;
+  where[5] = (r_symbolnum >>  8) & 0xff;
+  where[6] = (r_symbolnum >> 16) & 0xff;
+  where[7] = r_flags;
+}
+#endif /* !BFD_ASSEMBLER */
+#endif /* OBJ_AOUT */
+
+/*
+ *       BUGS, GRIPES,  APOLOGIA, etc.
+ *
+ * The opcode table 'votstrs' needs to be sorted on opcode frequency.
+ * That is, AFTER we hash it with hash_...(), we want most-used opcodes
+ * to come out of the hash table faster.
+ *
+ * I am sorry to inflict yet another VAX assembler on the world, but
+ * RMS says we must do everything from scratch, to prevent pin-heads
+ * restricting this software.
+ */
+
+/*
+ * This is a vaguely modular set of routines in C to parse VAX
+ * assembly code using DEC mnemonics. It is NOT un*x specific.
+ *
+ * The idea here is that the assembler has taken care of all:
+ *   labels
+ *   macros
+ *   listing
+ *   pseudo-ops
+ *   line continuation
+ *   comments
+ *   condensing any whitespace down to exactly one space
+ * and all we have to do is parse 1 line into a vax instruction
+ * partially formed. We will accept a line, and deliver:
+ *   an error message (hopefully empty)
+ *   a skeleton VAX instruction (tree structure)
+ *   textual pointers to all the operand expressions
+ *   a warning message that notes a silly operand (hopefully empty)
+ */
+
+/*
+ *		E D I T   H I S T O R Y
+ *
+ * 17may86 Dean Elsner. Bug if line ends immediately after opcode.
+ * 30apr86 Dean Elsner. New vip_op() uses arg block so change call.
+ *  6jan86 Dean Elsner. Crock vip_begin() to call vip_op_defaults().
+ *  2jan86 Dean Elsner. Invent synthetic opcodes.
+ *	Widen vax_opcodeT to 32 bits. Use a bit for VIT_OPCODE_SYNTHETIC,
+ *	which means this is not a real opcode, it is like a macro; it will
+ *	be relax()ed into 1 or more instructions.
+ *	Use another bit for VIT_OPCODE_SPECIAL if the op-code is not optimised
+ *	like a regular branch instruction. Option added to vip_begin():
+ *	exclude	synthetic opcodes. Invent synthetic_votstrs[].
+ * 31dec85 Dean Elsner. Invent vit_opcode_nbytes.
+ *	Also make vit_opcode into a char[]. We now have n-byte vax opcodes,
+ *	so caller's don't have to know the difference between a 1-byte & a
+ *	2-byte op-code. Still need vax_opcodeT concept, so we know how
+ *	big an object must be to hold an op.code.
+ * 30dec85 Dean Elsner. Widen typedef vax_opcodeT in "vax-inst.h"
+ *	because vax opcodes may be 16 bits. Our crufty C compiler was
+ *	happily initialising 8-bit vot_codes with 16-bit numbers!
+ *	(Wouldn't the 'phone company like to compress data so easily!)
+ * 29dec85 Dean Elsner. New static table vax_operand_width_size[].
+ *	Invented so we know hw many bytes a "I^#42" needs in its immediate
+ *	operand. Revised struct vop in "vax-inst.h": explicitly include
+ *	byte length of each operand, and it's letter-code datum type.
+ * 17nov85 Dean Elsner. Name Change.
+ *	Due to ar(1) truncating names, we learned the hard way that
+ *	"vax-inst-parse.c" -> "vax-inst-parse." dropping the "o" off
+ *	the archived object name. SO... we shortened the name of this
+ *	source file, and changed the makefile.
+ */
+
 /* Parse a vax operand in DEC assembler notation.
    For speed, expect a string of whitespace to be reduced to a single ' '.
    This is the case for GNU AS, and is easy for other DEC-compatible
@@ -3154,7 +3306,7 @@
 			  if (flag_want_pic && operandP->vop_mode == 8
 				&& this_add_symbol != NULL)
 			    {
-			      as_warn (_("Symbol %s used as immediate operand in PIC mode."),
+			      as_warn (_("Symbol '%s' used as immediate operand in PIC mode."),
 				       S_GET_NAME (this_add_symbol));
 			    }
 #endif
@@ -3230,7 +3382,15 @@
 			      length = 4;
 			    }
 			}
+#ifdef OBJ_ELF
+		      if (flag_want_pic && this_add_symbol != NULL)
+		        {
+			  as_warn (_("Symbol '%s' used as displacement in PIC mode."),
+			       S_GET_NAME (this_add_symbol));
+		        }
+#endif
 		      p = frag_more (1 + length);
+		      know (operandP->vop_reg != 0xf);
 		      know (operandP->vop_reg >= 0);
 		      p[0] = operandP->vop_reg
 			| ((at | "?\12\14?\16"[length]) << 4);
@@ -3406,3 +3566,36 @@
 {
   return vax_md_atof (type, litP, sizeP);
 }
+
+void
+vax_cfi_frame_initial_instructions (void)
+{
+  cfi_add_CFA_def_cfa (14, 0);
+}
+
+int
+tc_vax_regname_to_dw2regnum (char *regname)
+{
+  unsigned int i;
+  static const struct { char *name; int dw2regnum; } regnames[] =
+    {
+      { "r0",   0 }, { "r1",  1 }, { "r2",   2 }, { "r3",   3 },
+      { "r4",   4 }, { "r5",  5 }, { "r6",   6 }, { "r7",   7 },
+      { "r8",   8 }, { "r9",  9 }, { "r10", 10 }, { "r11", 11 },
+      { "ap",  12 }, { "fp", 13 }, { "sp",  14 }, { "pc",  15 },
+      { "psw", 16 },
+    };
+
+  for (i = 0; i < ARRAY_SIZE (regnames); ++i)
+    if (strcmp (regnames[i].name, regname) == 0)
+      return regnames[i].dw2regnum;
+
+  return -1;
+}
+
+void
+vax_cfi_emit_pcrel_expr (expressionS *expP, unsigned int nbytes)
+{
+  expP->X_add_number += nbytes;
+  emit_expr (expP, nbytes);
+}
diff -rNU3 a/gas/config/tc-vax.h b/gas/config/tc-vax.h
--- a/gas/config/tc-vax.h	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/tc-vax.h	2022-12-25 05:17:06.000000000 +0900
@@ -71,9 +71,17 @@
 		     == S_GET_SEGMENT ((FIX)->fx_addsy)))	\
 	     || S_IS_LOCAL ((FIX)->fx_addsy)))
 
-/*
- * Local Variables:
- * comment-column: 0
- * fill-column: 131
- * End:
- */
+#define TARGET_USE_CFIPOP 1
+
+#define tc_cfi_frame_initial_instructions vax_cfi_frame_initial_instructions
+extern void vax_cfi_frame_initial_instructions (void);
+
+#define tc_regname_to_dw2regnum tc_vax_regname_to_dw2regnum
+extern int tc_vax_regname_to_dw2regnum (char *);
+
+#define tc_cfi_emit_pcrel_expr vax_cfi_emit_pcrel_expr
+extern void vax_cfi_emit_pcrel_expr (expressionS *, unsigned int);
+
+#define DWARF2_LINE_MIN_INSN_LENGTH     1
+#define DWARF2_DEFAULT_RETURN_COLUMN    15
+#define DWARF2_CIE_DATA_ALIGNMENT       -4
diff -rNU3 a/gas/config/te-armnbsdeabi.h b/gas/config/te-armnbsdeabi.h
--- a/gas/config/te-armnbsdeabi.h	1970-01-01 09:00:00.000000000 +0900
+++ b/gas/config/te-armnbsdeabi.h	2013-02-05 07:38:07.000000000 +0900
@@ -0,0 +1,25 @@
+/* Copyright 2004, 2005, 2007, 2009 Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as
+   published by the Free Software Foundation; either version 3,
+   or (at your option) any later version.
+
+   GAS is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+   the GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#include "te-nbsd.h"
+
+/* The EABI requires the use of VFP.  */
+#define CPU_DEFAULT ARM_ARCH_V5TEJ
+#define FPU_DEFAULT FPU_ARCH_VFP
+#define EABI_DEFAULT EF_ARM_EABI_VER5
diff -rNU3 a/gas/config/te-armnbsdeabihf.h b/gas/config/te-armnbsdeabihf.h
--- a/gas/config/te-armnbsdeabihf.h	1970-01-01 09:00:00.000000000 +0900
+++ b/gas/config/te-armnbsdeabihf.h	2013-02-05 07:38:07.000000000 +0900
@@ -0,0 +1,25 @@
+/* Copyright 2004, 2005, 2007, 2009 Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as
+   published by the Free Software Foundation; either version 3,
+   or (at your option) any later version.
+
+   GAS is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+   the GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#include "te-nbsd.h"
+
+/* The EABI requires the use of VFP.  */
+#define CPU_DEFAULT ARM_ARCH_V5TEJ
+#define FPU_DEFAULT FPU_ARCH_VFP_V2
+#define EABI_DEFAULT EF_ARM_EABI_VER5
diff -rNU3 a/gas/config/te-armnbsd.h b/gas/config/te-armnbsd.h
--- a/gas/config/te-armnbsd.h	1970-01-01 09:00:00.000000000 +0900
+++ b/gas/config/te-armnbsd.h	2013-10-01 19:06:17.000000000 +0900
@@ -0,0 +1,22 @@
+/* Copyright 2004, 2005, 2007, 2009 Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as
+   published by the Free Software Foundation; either version 3,
+   or (at your option) any later version.
+
+   GAS is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+   the GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#include "te-nbsd.h"
+
+#define CPU_DEFAULT ARM_ARCH_V4
diff -rNU3 a/gas/config/vax-inst.h b/gas/config/vax-inst.h
--- a/gas/config/vax-inst.h	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/config/vax-inst.h	2022-12-25 05:17:06.000000000 +0900
@@ -65,6 +65,8 @@
 #define VAX_WIDEN_WORD (0x20)	/* Add this to byte branch to get word br.  */
 #define VAX_WIDEN_LONG (0x6)	/* Add this to byte branch to get long jmp.*/
 /* Needs VAX_PC_RELATIVE_MODE byte after it*/
+#define	VAX_CALLS (0xFB)	/* Call with arg list on stack	           */
+#define	VAX_CALLG (0xFA)	/* Call with arg list in memory		   */
 
 struct vit			/* vax instruction tree                    */
 {
diff -rNU3 a/gas/configure b/gas/configure
--- a/gas/configure	2022-08-05 18:55:17.000000000 +0900
+++ b/gas/configure	2023-01-16 08:10:53.000000000 +0900
@@ -11580,17 +11580,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -11625,17 +11625,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
@@ -12096,7 +12096,7 @@
       mips)
 	# Set mips_cpu to the name of the default CPU.
 	case ${target_cpu} in
-	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el)
+	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el | mips64eb | mipsn64el | mipsn64eb)
 	    mips_cpu=from-abi
 	    ;;
 	  mipsisa32 | mipsisa32el)
diff -rNU3 a/gas/configure.ac b/gas/configure.ac
--- a/gas/configure.ac	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/configure.ac	2022-12-25 05:17:05.000000000 +0900
@@ -299,7 +299,7 @@
       mips)
 	# Set mips_cpu to the name of the default CPU.
 	case ${target_cpu} in
-	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el)
+	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el | mips64eb | mipsn64el | mipsn64eb )
 	    mips_cpu=from-abi
 	    ;;
 	  mipsisa32 | mipsisa32el)
diff -rNU3 a/gas/configure.tgt b/gas/configure.tgt
--- a/gas/configure.tgt	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/configure.tgt	2022-12-25 05:17:05.000000000 +0900
@@ -72,7 +72,7 @@
   m32c)			cpu_type=m32c endian=little ;;
   m32r)			cpu_type=m32r endian=big ;;
   m32rle)		cpu_type=m32r endian=little ;;
-  m5200)		cpu_type=m68k ;;
+  m5200|m5407)		cpu_type=m68k ;;
   m68008)		cpu_type=m68k ;;
   m680[012346]0)	cpu_type=m68k ;;
   m6811|m6812|m68hc12)	cpu_type=m68hc11 ;;
@@ -351,6 +351,7 @@
 
   or1k*-*-elf | or1k*-*-rtems*) 	fmt=elf endian=big ;;
   or1k*-*-linux*)			fmt=elf em=linux endian=big ;;
+  or1k-*-netbsd*)			fmt=elf em=nbsd ;;
 
   pj*)					fmt=elf ;;
 
diff -rNU3 a/gas/input-scrub.c b/gas/input-scrub.c
--- a/gas/input-scrub.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/input-scrub.c	2023-01-30 08:39:12.000000000 +0900
@@ -278,9 +278,11 @@
 
   next_saved_file = input_scrub_push (position);
 
-  /* Allocate sufficient space: from->len + optional newline.  */
+  /* Allocate sufficient space: from->len plus optional newline
+     plus two ".linefile " directives, plus a little more for other
+     expansion.  */
   newline = from->len >= 1 && from->ptr[0] != '\n';
-  sb_build (&from_sb, from->len + newline);
+  sb_build (&from_sb, from->len + newline + 2 * sizeof (".linefile") + 30);
   if (expansion == expanding_repeat && from_sb_expansion >= expanding_macro)
     expansion = expanding_nested;
   from_sb_expansion = expansion;
diff -rNU3 a/gas/macro.c b/gas/macro.c
--- a/gas/macro.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/macro.c	2023-01-30 08:39:12.000000000 +0900
@@ -1056,6 +1056,8 @@
       loclist = f;
     }
 
+  if (!err && (out->len == 0 || out->ptr[out->len - 1] != '\n'))
+    sb_add_char (out, '\n');
   return err;
 }
 
diff -rNU3 a/gas/Makefile.am b/gas/Makefile.am
--- a/gas/Makefile.am	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/Makefile.am	2022-12-31 14:44:25.000000000 +0900
@@ -445,6 +445,8 @@
 
 EXTRA_as_new_SOURCES += config/m68k-parse.y
 config/m68k-parse.c: $(srcdir)/config/m68k-parse.y
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_config_m68k-parse.c:
 	$(SHELL) $(YLWRAP) $(srcdir)/config/m68k-parse.y y.tab.c $@ -- $(YACCCOMPILE)
 config/m68k-parse.h: config/m68k-parse.c
 	@true
diff -rNU3 a/gas/Makefile.in b/gas/Makefile.in
--- a/gas/Makefile.in	2022-08-05 18:55:17.000000000 +0900
+++ b/gas/Makefile.in	2022-12-31 14:44:25.000000000 +0900
@@ -1456,24 +1456,24 @@
 	@$(MKDIR_P) doc
 	@: > doc/$(am__dirstamp)
 
-doc/as.info: doc/as.texi $(doc_as_TEXINFOS)
-	@test -f doc/$(am__dirstamp) || $(MAKE) $(AM_MAKEFLAGS) doc/$(am__dirstamp)
-	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
-	rm -rf $$backupdir && mkdir $$backupdir && \
-	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
-	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
-	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
-	  done; \
-	else :; fi && \
-	if $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \
-	 -o $@ `test -f 'doc/as.texi' || echo '$(srcdir)/'`doc/as.texi; \
-	then \
-	  rc=0; \
-	else \
-	  rc=$$?; \
-	  $$restore $$backupdir/* `echo "./$@" | sed 's|[^/]*$$||'`; \
-	fi; \
-	rm -rf $$backupdir; exit $$rc
+#doc/as.info: doc/as.texi $(doc_as_TEXINFOS)
+#	@test -f doc/$(am__dirstamp) || $(MAKE) $(AM_MAKEFLAGS) doc/$(am__dirstamp)
+#	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
+#	rm -rf $$backupdir && mkdir $$backupdir && \
+#	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
+#	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
+#	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
+#	  done; \
+#	else :; fi && \
+#	if $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \
+#	 -o $@ `test -f 'doc/as.texi' || echo '$(srcdir)/'`doc/as.texi; \
+#	then \
+#	  rc=0; \
+#	else \
+#	  rc=$$?; \
+#	  $$restore $$backupdir/* `echo "./$@" | sed 's|[^/]*$$||'`; \
+#	fi; \
+#	rm -rf $$backupdir; exit $$rc
 
 doc/as.dvi: doc/as.texi $(doc_as_TEXINFOS) doc/$(am__dirstamp)
 	$(AM_V_TEXI2DVI)TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
@@ -2048,6 +2048,8 @@
 	$(EGREP) "(development|experimental)=" $(BFDDIR)/development.sh  \
 	  | $(AWK) -F= '{ print "set " $$1 " " $$2 }' > $@
 config/m68k-parse.c: $(srcdir)/config/m68k-parse.y
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_config_m68k-parse.c:
 	$(SHELL) $(YLWRAP) $(srcdir)/config/m68k-parse.y y.tab.c $@ -- $(YACCCOMPILE)
 config/m68k-parse.h: config/m68k-parse.c
 	@true
@@ -2214,14 +2216,14 @@
 # Build the man page from the texinfo file
 # The sed command removes the no-adjust Nroff command so that
 # the man output looks standard.
-doc/as.1: $(srcdir)/doc/as.texi doc/asconfig.texi $(CPU_DOCS) doc/$(am__dirstamp)
-	$(AM_V_GEN)touch $@
-	$(AM_V_at)-$(TEXI2POD) $(MANCONF) < $(srcdir)/doc/as.texi > doc/as.pod
-	$(AM_V_at)-($(POD2MAN) doc/as.pod | \
-	        sed -e '/^.if n .na/d' > $@.T$$$$ && \
-	        mv -f $@.T$$$$ $@) || \
-	        (rm -f $@.T$$$$ && exit 1)
-	$(AM_V_at)rm -f doc/as.pod
+#doc/as.1: $(srcdir)/doc/as.texi doc/asconfig.texi $(CPU_DOCS) doc/$(am__dirstamp)
+#	$(AM_V_GEN)touch $@
+#	$(AM_V_at)-$(TEXI2POD) $(MANCONF) < $(srcdir)/doc/as.texi > doc/as.pod
+#	$(AM_V_at)-($(POD2MAN) doc/as.pod | \
+#	        sed -e '/^.if n .na/d' > $@.T$$$$ && \
+#	        mv -f $@.T$$$$ $@) || \
+#	        (rm -f $@.T$$$$ && exit 1)
+#	$(AM_V_at)rm -f doc/as.pod
 
 html-local: doc/as/index.html
 doc/as/index.html: doc/as.texi $(doc_as_TEXINFOS) doc/$(am__dirstamp)
diff -rNU3 a/gas/remap.c b/gas/remap.c
--- a/gas/remap.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/remap.c	2022-12-25 05:17:05.000000000 +0900
@@ -76,10 +76,13 @@
 
   for (map = debug_prefix_maps; map; map = map->next)
     if (filename_ncmp (filename, map->old_prefix, map->old_len) == 0)
-      {
-	const char *name = filename + map->old_len;
-	return concat (map->new_prefix, name, NULL);
-      }
-	
-  return xstrdup (filename);
+      break;
+  if (!map)
+    return xstrdup (filename);
+  const char *name = filename + map->old_len;
+  size_t name_len = strlen (name) + 1;
+  char *s = (char *) xmalloc (name_len + map->new_len);
+  memcpy (s, map->new_prefix, map->new_len);
+  memcpy (s + map->new_len, name, name_len);
+  return s;
 }
diff -rNU3 a/gas/sb.c b/gas/sb.c
--- a/gas/sb.c	2022-07-08 18:46:47.000000000 +0900
+++ b/gas/sb.c	2023-01-30 08:39:12.000000000 +0900
@@ -119,11 +119,12 @@
      So we loop until the input S is consumed.  */
   while (1)
     {
-      size_t copy = s->len - (scrub_position - s->ptr);
+      size_t copy = s->len - (scrub_position - s->ptr) + do_scrub_pending ();
       if (copy == 0)
 	break;
       sb_check (ptr, copy);
-      ptr->len += do_scrub_chars (scrub_from_sb, ptr->ptr + ptr->len, copy);
+      ptr->len += do_scrub_chars (scrub_from_sb, ptr->ptr + ptr->len,
+				  ptr->max - ptr->len);
     }
 
   sb_to_scrub = 0;
diff -rNU3 a/gold/configure b/gold/configure
--- a/gold/configure	2022-07-08 18:58:08.000000000 +0900
+++ b/gold/configure	2023-01-16 08:10:53.000000000 +0900
@@ -7909,17 +7909,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -7954,17 +7954,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
diff -rNU3 a/gold/Makefile.am b/gold/Makefile.am
--- a/gold/Makefile.am	2022-07-08 18:46:48.000000000 +0900
+++ b/gold/Makefile.am	2022-12-25 05:17:06.000000000 +0900
@@ -19,7 +19,7 @@
 
 AUTOMAKE_OPTIONS = foreign
 
-SUBDIRS = po testsuite
+SUBDIRS = po # testsuite
 
 tooldir = $(exec_prefix)/$(target_alias)
 
diff -rNU3 a/gprof/configure b/gprof/configure
--- a/gprof/configure	2022-08-05 18:59:11.000000000 +0900
+++ b/gprof/configure	2023-01-16 08:10:53.000000000 +0900
@@ -11882,17 +11882,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -11927,17 +11927,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
diff -rNU3 a/gprof/corefile.c b/gprof/corefile.c
--- a/gprof/corefile.c	2022-07-08 18:46:48.000000000 +0900
+++ b/gprof/corefile.c	2022-12-25 05:17:06.000000000 +0900
@@ -30,6 +30,8 @@
 #include "safe-ctype.h"
 #include <limits.h>    /* For UINT_MAX.  */
 
+#include <stdlib.h>
+
 bfd *core_bfd;
 static int core_num_syms;
 static asymbol **core_syms;
diff -rNU3 a/gprof/gprof.c b/gprof/gprof.c
--- a/gprof/gprof.c	2022-07-08 18:46:48.000000000 +0900
+++ b/gprof/gprof.c	2022-12-25 05:17:06.000000000 +0900
@@ -47,6 +47,8 @@
 
 static void usage (FILE *, int) ATTRIBUTE_NORETURN;
 
+#include <stdlib.h>
+
 const char * whoami;
 const char * function_mapping_file;
 static const char * external_symbol_table;
diff -rNU3 a/include/opcode/mips.h b/include/opcode/mips.h
--- a/include/opcode/mips.h	2022-07-08 18:46:48.000000000 +0900
+++ b/include/opcode/mips.h	2022-12-25 05:17:07.000000000 +0900
@@ -1616,7 +1616,11 @@
   M_DSUB_I,
   M_DSUBU_I,
   M_DSUBU_I_2,
+  M_JR_S,
+  M_J_S,
   M_J_A,
+  M_JALR_S,
+  M_JALR_DS,
   M_JAL_1,
   M_JAL_2,
   M_JAL_A,

diff -rNU3 a/ld/configure b/ld/configure
--- a/ld/configure	2022-08-05 18:56:54.000000000 +0900
+++ b/ld/configure	2023-01-16 08:10:53.000000000 +0900
@@ -15847,17 +15847,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -15892,17 +15892,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
diff -rNU3 a/ld/configure.tgt b/ld/configure.tgt
--- a/ld/configure.tgt	2022-07-29 16:37:48.000000000 +0900
+++ b/ld/configure.tgt	2023-02-08 05:39:01.000000000 +0900
@@ -80,9 +80,15 @@
 # Please try to keep this table more or less in alphabetic order - it
 # makes it much easier to lookup a specific archictecture.
 case "${targ}" in
+aarch64_be-*-netbsd*)	targ_emul=aarch64nbsdb
+			targ_extra_emuls="aarch64nbsd aarch64elfb aarch64elf armelfb_nbsd_eabihf armelf_nbsd_eabihf armelfb_nbsd_eabi armelf_nbsd_eabi armelfb_nbsd armelf_nbsd armelf armelfb"
+			;;
 aarch64_be-*-elf)	targ_emul=aarch64elfb
 			targ_extra_emuls="aarch64elf aarch64elf32 aarch64elf32b armelfb armelf"
 			;;
+aarch64-*-netbsd*)	targ_emul=aarch64nbsd
+			targ_extra_emuls="aarch64nbsdb aarch64elf aarch64elfb armelf_nbsd_eabihf armelfb_nbsd_eabihf armelf_nbsd_eabi armelfb_nbsd_eabi armelf_nbsd armelfb_nbsd armelf armelfb"
+			;;
 aarch64-*-elf | aarch64-*-rtems* | aarch64-*-genode*)
 			targ_emul=aarch64elf
 			targ_extra_emuls="aarch64elf32 aarch64elf32b aarch64elfb armelf armelfb"
@@ -175,12 +181,24 @@
 			targ_emul=armelf_fbsd
 			targ_extra_emuls="armelfb_fbsd armelf"
 			;;
-armeb-*-netbsd*)	targ_emul=armelfb_nbsd;
-			targ_extra_emuls="armelf_nbsd armelf"
-			;;
-arm-*-netbsd*)	targ_emul=armelf_nbsd;
-			targ_extra_emuls="armelfb_nbsd armelf"
-			;;
+
+arm*eb-*-netbsdelf*-*eabihf*)
+			targ_emul=armelfb_nbsd_eabihf;
+			targ_extra_emuls="armelf_nbsd_eabihf armelf_nbsd_eabi armelfb_nbsd_eabi armelf_nbsd armelfb_nbsd armelf" ;;
+arm*eb-*-netbsdelf*-*eabi*)
+			targ_emul=armelfb_nbsd_eabi;
+			targ_extra_emuls="armelf_nbsd_eabi armelf_nbsd_eabihf armelfb_nbsd_eabihf armelf_nbsd armelfb_nbsd armelf" ;;
+arm*-*-netbsdelf*-*eabihf*)
+			targ_emul=armelf_nbsd_eabihf;
+			targ_extra_emuls="armelfb_nbsd_eabihf armelf_nbsd_eabi armelfb_nbsd_eabi armelf_nbsd armelfb_nbsd armelf" ;;
+arm*-*-netbsdelf*-*eabi*)
+			targ_emul=armelf_nbsd_eabi;
+			targ_extra_emuls="armelfb_nbsd_eabi armelf_nbsd_eabihf armelfb_nbsd_eabihf armelf_nbsd armelfb_nbsd armelf" ;;
+arm*eb-*-netbsdelf*)	targ_emul=armelfb_nbsd;
+			targ_extra_emuls="armelf_nbsd armelf" ;;
+arm-*-netbsdelf*)	targ_emul=armelf_nbsd;
+ 			targ_extra_emuls="armelfb_nbsd armelf"
+ 			;;
 arm-*-nto*)		targ_emul=armnto
 			;;
 arm-*-phoenix*)		targ_emul=armelf
@@ -522,11 +540,26 @@
 			;;
 mips*-sgi-irix6*)	targ_emul=elf32bmipn32
 			targ_extra_emuls="elf32bsmip elf64bmip"
-			targ_extra_libpath=$targ_extra_emuls
-			;;
+			targ_extra_libpath=$targ_extra_emuls ;;
 mips*el-*-haiku*)	targ_emul=elf_mipsel_haiku
 			targ_extra_emuls="elf32ltsmip elf32btsmip elf32ltsmipn32 elf64ltsmip elf32btsmipn32 elf64btsmip"
 			;;
+mips64*el-*-netbsd*)	targ_emul=elf32ltsmipn32 	 
+			targ_extra_emuls="elf64btsmip elf64ltsmip elf32ltsmip elf32btsmipn32 elf32btsmip" 	 
+			targ_extra_libpath=$targ_extra_emuls
+			;;
+mips64*-*-netbsd*)	targ_emul=elf32btsmipn32
+			targ_extra_emuls="elf64ltsmip elf64btsmip elf32btsmip elf32ltsmipn32 elf32ltsmip"
+			targ_extra_libpath=$targ_extra_emuls
+			;;
+mipsn64*el-*-netbsd*)	targ_emul=elf64ltsmip
+			targ_extra_emuls="elf64btsmip elf32ltsmip elf32btsmip elf32btsmipn32 elf32ltsmipn32"
+			targ_extra_libpath=$targ_extra_emuls
+			;; 	 
+mipsn64*-*-netbsd*)	targ_emul=elf64btsmip
+			targ_extra_emuls="elf64ltsmip elf64btsmip elf32ltsmip elf32btsmip elf32ltsmipn32 elf32btsmipn32"
+			targ_extra_libpath=$targ_extra_emuls
+  			;;
 mips*el-*-netbsd*)	targ_emul=elf32ltsmip
 			targ_extra_emuls="elf32btsmip elf64ltsmip elf64btsmip"
 			;;
@@ -661,8 +694,25 @@
 or1k-*-elf | or1knd-*-elf | or1k-*-rtems* | or1knd-*-rtems*)
 			targ_emul=elf32or1k
 			;;
+or1k-*-netbsd* | or1knd-*-netbsd*)	targ_emul=elf32or1k_nbsd
+			;;
 or1k-*-linux* | or1knd-*-linux*)	targ_emul=elf32or1k_linux
 			;;
+powerpc-*-netbsd*)
+			targ_emul=elf32ppc_nbsd
+			targ_extra_emuls="elf32ppc elf32ppcsim"
+			targ_extra_libpath=elf32ppc;
+			tdir_elf32ppcsim=`echo ${targ_alias} | sed -e 's/ppc/ppcsim/'`
+			targ64_extra_emuls=elf64ppc
+			targ64_extra_libpath=elf64ppc
+			;;
+powerpc64-*-netbsd*)
+			targ_emul=elf64ppc
+			targ_extra_emuls="elf32ppc elf32ppc_nbsd elf32ppcsim"
+			targ_extra_libpath="elf32ppc_nbsd elf32ppc"
+			tdir_elf32ppc=`echo "${targ_alias}" | sed -e 's/64//'`
+			tdir_elf32ppc_fbsd=$tdir_elf32ppc
+			;;
 pdp11-*-*)		targ_emul=pdp11
 			targ_extra_ofiles=
 			;;
@@ -789,11 +839,13 @@
 			;;
 pru*-*-*)		targ_emul=pruelf
 			;;
-riscv32be*-*-linux*)	targ_emul=elf32briscv
+riscv32be*-*-linux* | riscv32be*-*-netbsd*)
+			targ_emul=elf32briscv
 			targ_extra_emuls="elf32briscv_ilp32f elf32briscv_ilp32 elf64briscv elf64briscv_lp64f elf64briscv_lp64 elf32lriscv elf32lriscv_ilp32f elf32lriscv_ilp32 elf64lriscv elf64lriscv_lp64f elf64lriscv_lp64"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
-riscv32*-*-linux*)	targ_emul=elf32lriscv
+riscv32*-*-linux* | riscv-*-netbsd* | riscv32*-*-netbsd*)
+			targ_emul=elf32lriscv
 			targ_extra_emuls="elf32lriscv_ilp32f elf32lriscv_ilp32 elf64lriscv elf64lriscv_lp64f elf64lriscv_lp64 elf32briscv elf32briscv_ilp32f elf32briscv_ilp32 elf64briscv elf64briscv_lp64f elf64briscv_lp64"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
@@ -807,11 +859,13 @@
 			targ_extra_emuls="elf64lriscv elf32briscv elf64briscv"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
-riscv64be*-*-linux*)	targ_emul=elf64briscv
+riscv64be*-*-linux* | riscv64be*-*-netbsd*)
+			targ_emul=elf64briscv
 			targ_extra_emuls="elf64briscv_lp64f elf64briscv_lp64 elf32briscv elf32briscv_ilp32f elf32briscv_ilp32 elf64lriscv elf64lriscv_lp64f elf64lriscv_lp64 elf32lriscv elf32lriscv_ilp32f elf32lriscv_ilp32"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
-riscv64*-*-linux*)	targ_emul=elf64lriscv
+riscv64*-*-linux* | riscv64*-*-netbsd*)
+			targ_emul=elf64lriscv
 			targ_extra_emuls="elf64lriscv_lp64f elf64lriscv_lp64 elf32lriscv elf32lriscv_ilp32f elf32lriscv_ilp32 elf64briscv elf64briscv_lp64f elf64briscv_lp64 elf32briscv elf32briscv_ilp32f elf32briscv_ilp32"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
@@ -930,6 +984,16 @@
 			targ_extra_libpath=elf64_sparc
 			tdir_elf64_sparc=`echo ${targ_alias} | sed -e 's/32//'`
 			;;
+sparc64-*-netbsd*)	targ_emul=elf64_sparc
+			targ_extra_emuls="elf32_sparc"
+			;;
+sparc64-*-openbsd*)	targ_emul=elf64_sparc
+			targ_extra_emuls="elf32_sparc"
+			;;
+sparc*-*-netbsd*elf*)	targ_emul=elf32_sparc
+			;;
+sparc*-*-netbsd*)	targ_emul=sparcnbsd
+			;;
 sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
 			targ_emul=elf32_sparc_sol2
 			targ_extra_emuls=elf32_sparc
@@ -1167,7 +1231,7 @@
 
 # Enable -z separate-code and --warn-textrel by default for Linux/x86.
 case "${target}" in
-i[3-7]86-*-linux-* | x86_64-*-linux-*)
+i[3-7]86-*-linux-* | x86_64-*-linux-* | i[3-7]86-*-netbsd* | x86_64-*-netbsd*)
   if test ${ac_default_ld_z_separate_code} = unset; then
     ac_default_ld_z_separate_code=1
   fi
diff -rNU3 a/ld/emulparams/aarch64nbsdb.sh b/ld/emulparams/aarch64nbsdb.sh
--- a/ld/emulparams/aarch64nbsdb.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/aarch64nbsdb.sh	2014-08-10 14:47:36.000000000 +0900
@@ -0,0 +1,2 @@
+. ${srcdir}/emulparams/aarch64nbsd.sh
+OUTPUT_FORMAT="elf64-bigaarch64"
diff -rNU3 a/ld/emulparams/aarch64nbsd.sh b/ld/emulparams/aarch64nbsd.sh
--- a/ld/emulparams/aarch64nbsd.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/aarch64nbsd.sh	2020-04-09 20:10:07.000000000 +0900
@@ -0,0 +1,37 @@
+ARCH=aarch64
+MACHINE=
+NOP=0
+
+SCRIPT_NAME=elf
+ELFSIZE=64
+OUTPUT_FORMAT="elf64-littleaarch64"
+BIG_OUTPUT_FORMAT="elf64-bigaarch64"
+LITTLE_OUTPUT_FORMAT="elf64-littleaarch64"
+NO_REL_RELOCS=yes
+
+TEMPLATE_NAME=elf
+EXTRA_EM_FILE=aarch64elf
+
+GENERATE_SHLIB_SCRIPT=yes
+GENERATE_PIE_SCRIPT=yes
+
+MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
+COMMONPAGESIZE="CONSTANT (COMMONPAGESIZE)"
+SEPARATE_GOTPLT=24
+IREL_IN_PLT=
+
+TEXT_START_ADDR=0x200100000
+
+DATA_START_SYMBOLS='PROVIDE (__data_start = .);';
+
+# AArch64 does not support .s* sections.
+NO_SMALL_DATA=yes
+
+OTHER_BSS_SYMBOLS='__bss_start__ = .;'
+OTHER_BSS_END_SYMBOLS='_bss_end__ = . ; __bss_end__ = . ;'
+OTHER_END_SYMBOLS='__end__ = . ;'
+
+OTHER_SECTIONS='.note.gnu.arm.ident 0 : { KEEP (*(.note.gnu.arm.ident)) }'
+ATTRS_SECTIONS='.ARM.attributes 0 : { KEEP (*(.ARM.attributes)) KEEP (*(.gnu.attributes)) }'
+# Ensure each PLT entry is aligned to a cache line.
+PLT=".plt          ${RELOCATING-0} : ALIGN(16) { *(.plt)${IREL_IN_PLT+ *(.iplt)} }"
diff -rNU3 a/ld/emulparams/armelfb_nbsd_eabihf.sh b/ld/emulparams/armelfb_nbsd_eabihf.sh
--- a/ld/emulparams/armelfb_nbsd_eabihf.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/armelfb_nbsd_eabihf.sh	2014-01-31 12:26:50.000000000 +0900
@@ -0,0 +1,2 @@
+. ${srcdir}/emulparams/armelf_nbsd_eabihf.sh
+OUTPUT_FORMAT="elf32-bigarm"
diff -rNU3 a/ld/emulparams/armelfb_nbsd_eabi.sh b/ld/emulparams/armelfb_nbsd_eabi.sh
--- a/ld/emulparams/armelfb_nbsd_eabi.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/armelfb_nbsd_eabi.sh	2012-08-05 13:03:03.000000000 +0900
@@ -0,0 +1,2 @@
+. ${srcdir}/emulparams/armelf_nbsd_eabi.sh
+OUTPUT_FORMAT="elf32-bigarm"
diff -rNU3 a/ld/emulparams/armelf_nbsd_eabihf.sh b/ld/emulparams/armelf_nbsd_eabihf.sh
--- a/ld/emulparams/armelf_nbsd_eabihf.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/armelf_nbsd_eabihf.sh	2016-10-11 16:05:29.000000000 +0900
@@ -0,0 +1,20 @@
+. ${srcdir}/emulparams/armelf_nbsd.sh
+
+# Use the ARM ABI-compliant exception-handling sections.
+OTHER_READONLY_SECTIONS="
+  .ARM.extab ${RELOCATING-0} : { *(.ARM.extab${RELOCATING+* .gnu.linkonce.armextab.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_start = .); }
+  .ARM.exidx ${RELOCATING-0} : { *(.ARM.exidx${RELOCATING+* .gnu.linkonce.armexidx.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_end = .); }"
+
+case "$target" in
+  arm*-*-netbsdelf*-*eabihf*)
+    ;;
+  aarch64*-*-netbsd* | arm*-*-netbsdelf*)
+    case "$EMULATION_NAME" in
+    *armelf*eabihf)
+      LIB_PATH='=/usr/lib/eabihf'
+      ;;
+    esac
+    ;;
+esac
diff -rNU3 a/ld/emulparams/armelf_nbsd_eabi.sh b/ld/emulparams/armelf_nbsd_eabi.sh
--- a/ld/emulparams/armelf_nbsd_eabi.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/armelf_nbsd_eabi.sh	2016-10-11 16:05:29.000000000 +0900
@@ -0,0 +1,27 @@
+. ${srcdir}/emulparams/armelf_nbsd.sh
+
+# Use the ARM ABI-compliant exception-handling sections.
+OTHER_READONLY_SECTIONS="
+  .ARM.extab ${RELOCATING-0} : { *(.ARM.extab${RELOCATING+* .gnu.linkonce.armextab.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_start = .); }
+  .ARM.exidx ${RELOCATING-0} : { *(.ARM.exidx${RELOCATING+* .gnu.linkonce.armexidx.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_end = .); }"
+
+case "$target" in
+  arm*-*-netbsdelf*-*eabihf*)
+    case "$EMULATION_NAME" in
+    *armelf*eabi)
+      LIB_PATH='=/usr/lib/eabi'
+      ;;
+    esac
+    ;;
+  arm*-*-netbsdelf*-*eabi*)
+    ;;
+  aarch64*-*-netbsd* | arm*-*-netbsdelf*)
+    case "$EMULATION_NAME" in
+    *armelf*eabi)
+      LIB_PATH='=/usr/lib/eabi'
+      ;;
+    esac
+    ;;
+esac
diff -rNU3 a/ld/emulparams/armelf_nbsd.sh b/ld/emulparams/armelf_nbsd.sh
--- a/ld/emulparams/armelf_nbsd.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/armelf_nbsd.sh	2020-04-04 08:48:49.000000000 +0900
@@ -1,7 +1,19 @@
 source_sh ${srcdir}/emulparams/armelf.sh
 MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
-TEXT_START_ADDR=0x00008000
+TEXT_START_ADDR=0x00010000
 TARGET2_TYPE=got-rel
+GENERATE_PIE_SCRIPT=yes
 
+unset DATA_START_SYMBOLS
 unset STACK_ADDR
 unset EMBEDDED
+
+case "$target" in
+  aarch64*-*-netbsd* | arm*-*-netbsdelf*-*eabi*)
+    case "$EMULATION_NAME" in
+    armelf*_nbsd)
+      LIB_PATH='=/usr/lib/oabi'
+      ;;
+    esac
+    ;;
+esac
diff -rNU3 a/ld/emulparams/elf32bmipn32-defs.sh b/ld/emulparams/elf32bmipn32-defs.sh
--- a/ld/emulparams/elf32bmipn32-defs.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32bmipn32-defs.sh	2021-02-20 23:48:07.000000000 +0900
@@ -6,6 +6,7 @@
 
 # Handle both big- and little-ended 32-bit MIPS objects.
 ARCH=mips
+MACHINE=
 OUTPUT_FORMAT="elf32-bigmips"
 BIG_OUTPUT_FORMAT="elf32-bigmips"
 LITTLE_OUTPUT_FORMAT="elf32-littlemips"
@@ -77,7 +78,7 @@
 "
 
 # Magic symbols.
-TEXT_START_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_ftext = .${CREATE_SHLIB+)};"
+TEXT_START_SYMBOLS="PROVIDE_HIDDEN (__eprol = .); ${CREATE_SHLIB+PROVIDE (}_ftext = .${CREATE_SHLIB+)};"
 DATA_START_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_fdata = .${CREATE_SHLIB+)};"
 OTHER_BSS_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_fbss = .${CREATE_SHLIB+)};"
 
diff -rNU3 a/ld/emulparams/elf32bmip.sh b/ld/emulparams/elf32bmip.sh
--- a/ld/emulparams/elf32bmip.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32bmip.sh	2021-02-20 23:48:07.000000000 +0900
@@ -56,7 +56,7 @@
   .lit8         ${RELOCATING-0} : { *(.lit8) }
   .lit4         ${RELOCATING-0} : { *(.lit4) }
 "
-TEXT_START_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_ftext = .${CREATE_SHLIB+)};"
+TEXT_START_SYMBOLS="PROVIDE_HIDDEN (__eprol = .); ${CREATE_SHLIB+PROVIDE (}_ftext = .${CREATE_SHLIB+)};"
 DATA_START_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_fdata = .${CREATE_SHLIB+)};"
 OTHER_BSS_SYMBOLS="${CREATE_SHLIB+PROVIDE (}_fbss = .${CREATE_SHLIB+)};"
 OTHER_SECTIONS="
diff -rNU3 a/ld/emulparams/elf32lriscv_ilp32f.sh b/ld/emulparams/elf32lriscv_ilp32f.sh
--- a/ld/emulparams/elf32lriscv_ilp32f.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32lriscv_ilp32f.sh	2021-02-02 03:36:32.000000000 +0900
@@ -11,4 +11,13 @@
 	LIBPATH_SUFFIX="32/ilp32f 32" ;;
     esac
     ;;
+  # NetBSD puts ILP32 libraries in rv32 subdirectory.
+  # XXX d vs f vs ""
+  riscv64-*-netbsd*)
+    case "$EMULATION_NAME" in
+      *32*)
+	LIB_PATH='=/usr/lib/rv32'
+	;;
+    esac
+    ;;
 esac
diff -rNU3 a/ld/emulparams/elf32lriscv_ilp32.sh b/ld/emulparams/elf32lriscv_ilp32.sh
--- a/ld/emulparams/elf32lriscv_ilp32.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32lriscv_ilp32.sh	2021-02-02 03:36:32.000000000 +0900
@@ -11,4 +11,13 @@
 	LIBPATH_SUFFIX="32/ilp32 32" ;;
     esac
     ;;
+  # NetBSD puts ILP32 libraries in rv32 subdirectory.
+  # XXX d vs f vs ""
+  riscv64-*-netbsd*)
+    case "$EMULATION_NAME" in
+      *32*)
+	LIB_PATH='=/usr/lib/rv32'
+	;;
+    esac
+    ;;
 esac
diff -rNU3 a/ld/emulparams/elf32lriscv.sh b/ld/emulparams/elf32lriscv.sh
--- a/ld/emulparams/elf32lriscv.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32lriscv.sh	2021-02-02 03:36:32.000000000 +0900
@@ -12,4 +12,13 @@
 	LIBPATH_SUFFIX="32/ilp32d 32" ;;
     esac
     ;;
+  # NetBSD puts ILP32 libraries in rv32 subdirectory.
+  # XXX d vs f vs ""
+  riscv64-*-netbsd*)
+    case "$EMULATION_NAME" in
+      *32*)
+	LIB_PATH='=/usr/lib/rv32'
+	;;
+    esac
+    ;;
 esac
diff -rNU3 a/ld/emulparams/elf32or1k_nbsd.sh b/ld/emulparams/elf32or1k_nbsd.sh
--- a/ld/emulparams/elf32or1k_nbsd.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/elf32or1k_nbsd.sh	2014-09-04 04:01:16.000000000 +0900
@@ -0,0 +1,6 @@
+. ${srcdir}/emulparams/elf32or1k.sh
+unset EMBEDDED
+GENERATE_SHLIB_SCRIPT=yes
+GENERATE_PIE_SCRIPT=yes
+GENERATE_COMBRELOC_SCRIPT=yes
+TEXT_START_ADDR=0x00002000
diff -rNU3 a/ld/emulparams/elf32ppc_nbsd.sh b/ld/emulparams/elf32ppc_nbsd.sh
--- a/ld/emulparams/elf32ppc_nbsd.sh	1970-01-01 09:00:00.000000000 +0900
+++ b/ld/emulparams/elf32ppc_nbsd.sh	2016-10-07 05:29:33.000000000 +0900
@@ -0,0 +1,10 @@
+. ${srcdir}/emulparams/elf32ppc.sh
+
+case "$target" in
+  powerpc64*-*-netbsd*)
+    case "$EMULATION_NAME" in
+    *32*)
+      LIB_PATH='=/usr/lib/powerpc'
+    ;;
+    esac
+esac
diff -rNU3 a/ld/emulparams/elf32_sparc.sh b/ld/emulparams/elf32_sparc.sh
--- a/ld/emulparams/elf32_sparc.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf32_sparc.sh	2020-04-04 08:48:49.000000000 +0900
@@ -13,6 +13,17 @@
 TEMPLATE_NAME=elf
 DATA_PLT=
 GENERATE_SHLIB_SCRIPT=yes
+#ELFSIZE=32
 GENERATE_PIE_SCRIPT=yes
 NOP=0x01000000
 NO_SMALL_DATA=yes
+
+case "$target" in
+  sparc64-*-netbsd*)
+    case "$EMULATION_NAME" in
+      *32*)
+	LIB_PATH='=/usr/lib/sparc'
+	;;
+    esac
+    ;;
+esac
diff -rNU3 a/ld/emulparams/elf64alpha_nbsd.sh b/ld/emulparams/elf64alpha_nbsd.sh
--- a/ld/emulparams/elf64alpha_nbsd.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf64alpha_nbsd.sh	2020-04-04 08:48:49.000000000 +0900
@@ -1,2 +1,8 @@
 source_sh ${srcdir}/emulparams/elf64alpha.sh
 ENTRY=__start
+
+NOP=0x47ff041f
+# XXX binutils 2.13
+# Note that the number is always big-endian, thus we have to 
+# reverse the digit string.
+#NOP=0x0000fe2f1f04ff47		# unop; nop
diff -rNU3 a/ld/emulparams/elf_i386.sh b/ld/emulparams/elf_i386.sh
--- a/ld/emulparams/elf_i386.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/elf_i386.sh	2022-12-25 05:17:07.000000000 +0900
@@ -18,10 +18,22 @@
 TEMPLATE_NAME=elf
 EXTRA_EM_FILE="elf-x86"
 GENERATE_SHLIB_SCRIPT=yes
+#ELFSIZE=32
 GENERATE_PIE_SCRIPT=yes
 NO_SMALL_DATA=yes
 SEPARATE_GOTPLT="SIZEOF (.got.plt) >= 12 ? 12 : 0"
 IREL_IN_PLT=
+
+case "$target" in
+  x86_64-*-netbsd*)
+    case "$EMULATION_NAME" in
+      *i386*)
+       LIB_PATH='=/usr/lib/i386'
+       ;;
+    esac
+    ;;
+esac
+
 # These sections are placed right after .plt section.
 OTHER_PLT_SECTIONS="
 .plt.got      ${RELOCATING-0} : { *(.plt.got) }
diff -rNU3 a/ld/emulparams/hppalinux.sh b/ld/emulparams/hppalinux.sh
--- a/ld/emulparams/hppalinux.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/hppalinux.sh	2020-04-04 08:48:49.000000000 +0900
@@ -1,5 +1,5 @@
 # If you change this file, please also look at files which source this one:
-# hppanbsd.sh
+# hppanbsd.sh hppaobsd.sh
 
 SCRIPT_NAME=elf
 ELFSIZE=32
diff -rNU3 a/ld/emulparams/m68kelfnbsd.sh b/ld/emulparams/m68kelfnbsd.sh
--- a/ld/emulparams/m68kelfnbsd.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/m68kelfnbsd.sh	2020-04-04 08:48:49.000000000 +0900
@@ -1,4 +1,4 @@
 source_sh ${srcdir}/emulparams/m68kelf.sh
 TEXT_START_ADDR=0x2000
 TARGET_PAGE_SIZE=0x2000
-MACHINE=
+NONPAGED_TEXT_START_ADDR=${TEXT_START_ADDR}
diff -rNU3 a/ld/emulparams/m68kelf.sh b/ld/emulparams/m68kelf.sh
--- a/ld/emulparams/m68kelf.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/m68kelf.sh	2020-04-04 08:48:49.000000000 +0900
@@ -10,5 +10,6 @@
 TEMPLATE_NAME=elf
 EXTRA_EM_FILE=m68kelf
 GENERATE_SHLIB_SCRIPT=yes
+ELFSIZE=32
 GENERATE_PIE_SCRIPT=yes
 NO_SMALL_DATA=yes
diff -rNU3 a/ld/emulparams/shelf_nbsd.sh b/ld/emulparams/shelf_nbsd.sh
--- a/ld/emulparams/shelf_nbsd.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/shelf_nbsd.sh	2020-04-04 08:48:49.000000000 +0900
@@ -9,7 +9,12 @@
 
 DATA_START_SYMBOLS='PROVIDE (__data_start = .);';
 
-ENTRY=_start
+ENTRY=__start
 
 unset EMBEDDED
+unset OTHER_SECTIONS
+
+OTHER_READWRITE_SECTIONS='
+  .note.ABI-tag : { *(.note.ABI-tag) }
+'
 unset STACK_ADDR
diff -rNU3 a/ld/emulparams/sh.sh b/ld/emulparams/sh.sh
--- a/ld/emulparams/sh.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/emulparams/sh.sh	2009-08-19 16:19:31.000000000 +0900
@@ -3,6 +3,6 @@
 
 SCRIPT_NAME=sh
 OUTPUT_FORMAT="coff-sh"
-TEXT_START_ADDR=0x8000
-TARGET_PAGE_SIZE=128
+TEXT_START_ADDR=0x1000
+TARGET_PAGE_SIZE=0x1000
 ARCH=sh
diff -rNU3 a/ld/genscripts.sh b/ld/genscripts.sh
--- a/ld/genscripts.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/genscripts.sh	2022-12-25 05:17:07.000000000 +0900
@@ -257,7 +257,8 @@
     done
     libs="${exec_prefix}/${TOOL_LIB}/lib ${libs}"
   fi
-  append_to_lib_path ${libs}
+  #NetBSD: don't spam linker scripts like this.
+  #append_to_lib_path ${libs}
 fi
 
 if [ "x${LIB_PATH}" = "x" ] && [ "x${USE_LIBPATH}" = xyes ] ; then
diff -rNU3 a/ld/ldlex.l b/ld/ldlex.l
--- a/ld/ldlex.l	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/ldlex.l	2022-12-25 05:17:07.000000000 +0900
@@ -58,10 +58,6 @@
 #undef YY_INPUT
 #define YY_INPUT(buf,result,max_size) result = yy_input (buf, max_size)
 
-#ifndef YY_NO_UNPUT
-#define YY_NO_UNPUT
-#endif
-
 #define MAX_INCLUDE_DEPTH 10
 static YY_BUFFER_STATE include_stack[MAX_INCLUDE_DEPTH];
 static const char *file_name_stack[MAX_INCLUDE_DEPTH];
@@ -89,6 +85,8 @@
 
 %}
 
+%option nounput
+
 %a 4000
 %o 5000
 
diff -rNU3 a/ld/lexsup.c b/ld/lexsup.c
--- a/ld/lexsup.c	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/lexsup.c	2022-12-25 05:17:07.000000000 +0900
@@ -452,7 +452,7 @@
     ONE_DASH },
   { {"shared", no_argument, NULL, OPTION_SHARED},
     '\0', NULL, N_("Create a shared library"), ONE_DASH },
-  { {"Bshareable", no_argument, NULL, OPTION_SHARED }, /* FreeBSD.  */
+  { {"Bshareable", no_argument, NULL, OPTION_SHARED }, /* FreeBSD, NetBSD.  */
     '\0', NULL, NULL, ONE_DASH },
   { {"pie", no_argument, NULL, OPTION_PIE},
     '\0', NULL, N_("Create a position independent executable"), ONE_DASH },
@@ -573,6 +573,8 @@
   { {"whole-archive", no_argument, NULL, OPTION_WHOLE_ARCHIVE},
     '\0', NULL, N_("Include all objects from following archives"),
     TWO_DASHES },
+  { {"Bforcearchive", no_argument, NULL, OPTION_WHOLE_ARCHIVE},
+      '\0', NULL, NULL, TWO_DASHES },	/* NetBSD.  */
   { {"wrap", required_argument, NULL, OPTION_WRAP},
     '\0', N_("SYMBOL"), N_("Use wrapper functions for SYMBOL"), TWO_DASHES },
   { {"ignore-unresolved-symbol", required_argument, NULL,
diff -rNU3 a/ld/Makefile.am b/ld/Makefile.am
--- a/ld/Makefile.am	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/Makefile.am	2022-12-25 05:17:07.000000000 +0900
@@ -173,6 +173,8 @@
 	earmelf_linux_fdpiceabi.c \
 	earmelf_nacl.c \
 	earmelf_nbsd.c \
+	earmelf_nbsd_eabi.c \
+	earmelf_nbsd_eabihf.c \
 	earmelf_phoenix.c \
 	earmelf_vxworks.c \
 	earmelfb.c \
@@ -183,6 +185,9 @@
 	earmelfb_linux_fdpiceabi.c \
 	earmelfb_nacl.c \
 	earmelfb_nbsd.c \
+	earmelfb_nbsd_eabi.c \
+	earmelfb_nbsd_eabihf.c \
+	earmnbsd.c \
 	earmnto.c \
 	earmpe.c \
 	eavr1.c \
@@ -243,6 +248,12 @@
 	eelf32lppclinux.c \
 	eelf32lppcnto.c \
 	eelf32lppcsim.c \
+	eelf32lriscv.c \
+	eelf32lsmip.c \
+	eelf32ltsmip.c \
+	eelf32ltsmip_fbsd.c \
+	eelf32ltsmipn32.c \
+	eelf32ltsmipn32_fbsd.c \
 	eelf32m32c.c \
 	eelf32mb_linux.c \
 	eelf32mbel_linux.c \
@@ -255,8 +266,10 @@
 	eelf32mt.c \
 	eelf32or1k.c \
 	eelf32or1k_linux.c \
+	eelf32or1k_nbsd.c \
 	eelf32ppc.c \
 	eelf32ppc_fbsd.c \
+	eelf32ppc_nbsd.c \
 	eelf32ppchaiku.c \
 	eelf32ppclinux.c \
 	eelf32ppcnto.c \
@@ -385,6 +398,8 @@
 	eaarch64fbsdb.c \
 	eaarch64haiku.c \
 	eaarch64linux.c \
+	eaarch64nbsd.c \
+	eaarch64nbsdb.c \
 	eaarch64linux32.c \
 	eaarch64linux32b.c \
 	eaarch64linuxb.c \
@@ -1029,6 +1044,8 @@
 # because almost all configs use "gen" version of manual.
 #  Set DOCVER above to change.
 configdoc.texi:	${DOCVER}-doc.texi
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_configdoc.texi:
 	$(AM_V_GEN)cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi
 	$(AM_V_at)chmod u+w ./configdoc.texi
 
@@ -1036,6 +1053,8 @@
 # The sed command removes the no-adjust Nroff command so that
 # the man output looks standard.
 ld.1: $(srcdir)/ld.texi configdoc.texi
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_ld.1:
 	$(AM_V_GEN)touch $@
 	$(AM_V_at)-$(TEXI2POD) $(MANCONF) < $(srcdir)/ld.texi > ld.pod
 	$(AM_V_at)-($(POD2MAN) ld.pod | \
diff -rNU3 a/ld/Makefile.in b/ld/Makefile.in
--- a/ld/Makefile.in	2022-08-05 18:56:53.000000000 +0900
+++ b/ld/Makefile.in	2023-01-02 09:55:46.000000000 +0900
@@ -670,6 +670,8 @@
 	earmelf_linux_fdpiceabi.c \
 	earmelf_nacl.c \
 	earmelf_nbsd.c \
+	earmelf_nbsd_eabi.c \
+	earmelf_nbsd_eabihf.c \
 	earmelf_phoenix.c \
 	earmelf_vxworks.c \
 	earmelfb.c \
@@ -680,6 +682,9 @@
 	earmelfb_linux_fdpiceabi.c \
 	earmelfb_nacl.c \
 	earmelfb_nbsd.c \
+	earmelfb_nbsd_eabi.c \
+	earmelfb_nbsd_eabihf.c \
+	earmnbsd.c \
 	earmnto.c \
 	earmpe.c \
 	eavr1.c \
@@ -740,6 +745,12 @@
 	eelf32lppclinux.c \
 	eelf32lppcnto.c \
 	eelf32lppcsim.c \
+	eelf32lriscv.c \
+	eelf32lsmip.c \
+	eelf32ltsmip.c \
+	eelf32ltsmip_fbsd.c \
+	eelf32ltsmipn32.c \
+	eelf32ltsmipn32_fbsd.c \
 	eelf32m32c.c \
 	eelf32mb_linux.c \
 	eelf32mbel_linux.c \
@@ -752,8 +763,10 @@
 	eelf32mt.c \
 	eelf32or1k.c \
 	eelf32or1k_linux.c \
+	eelf32or1k_nbsd.c \
 	eelf32ppc.c \
 	eelf32ppc_fbsd.c \
+	eelf32ppc_nbsd.c \
 	eelf32ppchaiku.c \
 	eelf32ppclinux.c \
 	eelf32ppcnto.c \
@@ -881,6 +894,8 @@
 	eaarch64fbsdb.c \
 	eaarch64haiku.c \
 	eaarch64linux.c \
+	eaarch64nbsd.c \
+	eaarch64nbsdb.c \
 	eaarch64linux32.c \
 	eaarch64linux32b.c \
 	eaarch64linuxb.c \
@@ -1255,6 +1270,8 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linux32b.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64linuxb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64nbsd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64nbsdb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5ppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaix5rs6.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaixppc.Po@am__quote@
@@ -1276,6 +1293,8 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_linux_fdpiceabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd_eabi.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_nbsd_eabihf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_phoenix.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelf_vxworks.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb.Po@am__quote@
@@ -1286,6 +1305,9 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_linux_fdpiceabi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nacl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd_eabi.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmelfb_nbsd_eabihf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmnbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmnto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/earmpe.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eavr1.Po@am__quote@
@@ -1365,6 +1387,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcnto.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lppcsim.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lr5900n32.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32lriscv.Po@am__quote@
@@ -1388,8 +1411,10 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mt.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k_linux.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32or1k_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc_fbsd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppc_nbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppchaiku.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppclinux.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ppcnto.Po@am__quote@
@@ -1638,6 +1663,8 @@
 	-rm -f libtool config.lt
 
 ld.info: ld.texi $(ld_TEXINFOS)
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_ld.info:
 	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
 	rm -rf $$backupdir && mkdir $$backupdir && \
 	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
@@ -2649,6 +2676,8 @@
 # because almost all configs use "gen" version of manual.
 #  Set DOCVER above to change.
 configdoc.texi:	${DOCVER}-doc.texi
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_configdoc.texi:
 	$(AM_V_GEN)cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi
 	$(AM_V_at)chmod u+w ./configdoc.texi
 
@@ -2656,6 +2685,8 @@
 # The sed command removes the no-adjust Nroff command so that
 # the man output looks standard.
 ld.1: $(srcdir)/ld.texi configdoc.texi
+	@echo "NOT REBUILDING $@"
+NetBSD_DISABLED_ld.1:
 	$(AM_V_GEN)touch $@
 	$(AM_V_at)-$(TEXI2POD) $(MANCONF) < $(srcdir)/ld.texi > ld.pod
 	$(AM_V_at)-($(POD2MAN) ld.pod | \
diff -rNU3 a/ld/scripttempl/elf.sc b/ld/scripttempl/elf.sc
--- a/ld/scripttempl/elf.sc	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/scripttempl/elf.sc	2022-12-25 05:17:08.000000000 +0900
@@ -111,6 +111,8 @@
 #
 #  Each of these can also have corresponding .rel.* and .rela.* sections.
 
+test -z "$TEXT_START_SYMBOLS" && TEXT_START_SYMBOLS="PROVIDE_HIDDEN (__eprol = .);"
+test -z "$ENTRY" && ENTRY=_start
 if test -n "$NOP"; then
   FILL="=$NOP"
 else
@@ -543,6 +545,7 @@
   .text         ${RELOCATING-0} :
   {
     ${RELOCATING+${TEXT_START_SYMBOLS}}
+    *(.text)
     ${RELOCATING+*(.text.unlikely .text.*_unlikely .text.unlikely.*)}
     ${RELOCATING+*(.text.exit .text.exit.*)}
     ${RELOCATING+*(.text.startup .text.startup.*)}
diff -rNU3 a/ld/scripttempl/sh.sc b/ld/scripttempl/sh.sc
--- a/ld/scripttempl/sh.sc	2022-07-08 18:46:48.000000000 +0900
+++ b/ld/scripttempl/sh.sc	2022-12-25 05:17:08.000000000 +0900
@@ -23,6 +23,7 @@
 
 OUTPUT_FORMAT("${OUTPUT_FORMAT}")
 OUTPUT_ARCH(${ARCH})
+${LIB_SEARCH_DIRS}
 
 EOF
 
@@ -42,9 +43,9 @@
     *(.text)
     *(.strings)
     ${RELOCATING+ _etext = . ; }
-  } ${RELOCATING+ > ram}
+  }
   ${CONSTRUCTING+${TORS}}
-  .data :
+  .data  ${RELOCATING+ ALIGN(${TARGET_PAGE_SIZE})} :
   {
     *(.data)
     ${RELOCATING+*(.gcc_exc*)}
@@ -53,19 +54,19 @@
     ${RELOCATING+___EH_FRAME_END__ = . ;}
     ${RELOCATING+LONG(0);}
     ${RELOCATING+ _edata = . ; }
-  } ${RELOCATING+ > ram}
-  .bss :
+  }
+  .bss ${RELOCATING+ ALIGN(${TARGET_PAGE_SIZE})} :
   {
     ${RELOCATING+ _bss_start = . ; }
     *(.bss)
     *(COMMON)
     ${RELOCATING+ _end = . ;  }
-  } ${RELOCATING+ > ram}
-  .stack ${RELOCATING+ 0x30000 }  :
+  }
+  .stack :
   {
     ${RELOCATING+ _stack = . ; }
     *(.stack)
-  } ${RELOCATING+ > ram}
+  }
   .stab 0 ${RELOCATING+(NOLOAD)} :
   {
     *(.stab)
diff -rNU3 a/libiberty/configure b/libiberty/configure
--- a/libiberty/configure	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/configure	2022-12-25 05:17:08.000000000 +0900
@@ -7862,7 +7862,7 @@
 
 
 # We need multilib support, but only if configuring for the target.
-ac_config_files="$ac_config_files Makefile testsuite/Makefile"
+ac_config_files="$ac_config_files Makefile"  # testsuite/Makefile
 
 ac_config_commands="$ac_config_commands default"
 
diff -rNU3 a/libiberty/configure.ac b/libiberty/configure.ac
--- a/libiberty/configure.ac	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/configure.ac	2022-12-25 05:17:08.000000000 +0900
@@ -767,7 +767,7 @@
 AC_SUBST(htmldir)
 
 # We need multilib support, but only if configuring for the target.
-AC_CONFIG_FILES([Makefile testsuite/Makefile])
+AC_CONFIG_FILES([Makefile])
 AC_CONFIG_COMMANDS([default],
   [[test -z "$CONFIG_HEADERS" || echo timestamp > stamp-h
 if test -n "$CONFIG_FILES"; then
diff -rNU3 a/libiberty/floatformat.c b/libiberty/floatformat.c
--- a/libiberty/floatformat.c	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/floatformat.c	2022-12-25 05:17:08.000000000 +0900
@@ -515,7 +515,11 @@
       if (nan)
 	dto = NAN;
       else
+#ifdef __vax__
+	dto = HUGE_VAL;
+#else
 	dto = INFINITY;
+#endif
 
       if (get_field (ufrom, fmt->byteorder, fmt->totalsize, fmt->sign_start, 1))
 	dto = -dto;
diff -rNU3 a/libiberty/Makefile.in b/libiberty/Makefile.in
--- a/libiberty/Makefile.in	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/Makefile.in	2022-12-25 05:17:08.000000000 +0900
@@ -98,7 +98,7 @@
 	"tooldir=$(tooldir)"
 
 # Subdirectories to recurse into. We need to override this during cleaning
-SUBDIRS = testsuite
+SUBDIRS = # testsuite
 
 # FIXME: add @BUILD_INFO@ once we're sure it works for everyone.
 all: stamp-picdir stamp-noasandir $(TARGETLIB) required-list all-subdir
diff -rNU3 a/libiberty/make-temp-file.c b/libiberty/make-temp-file.c
--- a/libiberty/make-temp-file.c	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/make-temp-file.c	2022-12-25 05:17:08.000000000 +0900
@@ -95,6 +95,8 @@
 }
 
 static const char tmp[] = { DIR_SEPARATOR, 't', 'm', 'p', 0 };
+static const char usrtmp[] =
+{ DIR_SEPARATOR, 'u', 's', 'r', DIR_SEPARATOR, 't', 'm', 'p', 0 };
 static const char vartmp[] =
 { DIR_SEPARATOR, 'v', 'a', 'r', DIR_SEPARATOR, 't', 'm', 'p', 0 };
 
@@ -141,8 +143,9 @@
 	base = try_dir (P_tmpdir, base);
 #endif
 
-      /* Try /var/tmp, then /tmp.  */
+      /* Try /var/tmp, then /usr/tmp, then /tmp.  */
       base = try_dir (vartmp, base);
+      base = try_dir (usrtmp, base);
       base = try_dir (tmp, base);
       
       /* If all else fails, use the current directory!  */
diff -rNU3 a/libiberty/strerror.c b/libiberty/strerror.c
--- a/libiberty/strerror.c	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/strerror.c	2022-12-25 05:17:08.000000000 +0900
@@ -347,7 +347,7 @@
   ENTRY(EPROTOTYPE, "EPROTOTYPE", "Protocol wrong type for socket"),
 #endif
 #if defined (ENOPROTOOPT)
-  ENTRY(ENOPROTOOPT, "ENOPROTOOPT", "Protocol not available"),
+  ENTRY(ENOPROTOOPT, "ENOPROTOOPT", "Protocol option not available"),
 #endif
 #if defined (EPROTONOSUPPORT)
   ENTRY(EPROTONOSUPPORT, "EPROTONOSUPPORT", "Protocol not supported"),
diff -rNU3 a/libiberty/strsignal.c b/libiberty/strsignal.c
--- a/libiberty/strsignal.c	2022-07-08 18:46:48.000000000 +0900
+++ b/libiberty/strsignal.c	2022-12-25 05:17:08.000000000 +0900
@@ -551,7 +551,7 @@
 #ifndef HAVE_PSIGNAL
 
 void
-psignal (int signo, char *message)
+psignal (int signo, const char *message)
 {
   if (signal_names == NULL)
     {
diff -rNU3 a/Makefile.in b/Makefile.in
--- a/Makefile.in	2022-08-05 20:00:56.000000000 +0900
+++ b/Makefile.in	2022-12-25 05:17:03.000000000 +0900
@@ -449,8 +449,11 @@
 
 # Pass additional PGO and LTO compiler options to the PGO build.
 BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)
-override CFLAGS += $(BUILD_CFLAGS)
-override CXXFLAGS += $(BUILD_CFLAGS)
+# Not supported by BSD make
+# override CFLAGS += $(BUILD_CFLAGS)
+# override CXXFLAGS += $(BUILD_CFLAGS)
+CFLAGS += $(BUILD_CFLAGS)
+CXXFLAGS += $(BUILD_CFLAGS)
 
 # Additional PGO and LTO compiler options to generate profiling data
 # for the PGO build.
diff -rNU3 a/Makefile.tpl b/Makefile.tpl
--- a/Makefile.tpl	2022-07-08 18:46:47.000000000 +0900
+++ b/Makefile.tpl	2022-12-25 05:17:03.000000000 +0900
@@ -452,8 +452,11 @@
 
 # Pass additional PGO and LTO compiler options to the PGO build.
 BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)
-override CFLAGS += $(BUILD_CFLAGS)
-override CXXFLAGS += $(BUILD_CFLAGS)
+# Not supported by BSD make
+# override CFLAGS += $(BUILD_CFLAGS)
+# override CXXFLAGS += $(BUILD_CFLAGS)
+CFLAGS += $(BUILD_CFLAGS)
+CXXFLAGS += $(BUILD_CFLAGS)
 
 # Additional PGO and LTO compiler options to generate profiling data
 # for the PGO build.
diff -rNU3 a/opcodes/cgen.sh b/opcodes/cgen.sh
--- a/opcodes/cgen.sh	2022-07-08 18:46:48.000000000 +0900
+++ b/opcodes/cgen.sh	2022-12-25 05:17:08.000000000 +0900
@@ -61,6 +61,7 @@
 shift ; extrafiles=$9
 
 rootdir=${srcdir}/..
+move_if_change="${CONFIG_SHELL:-/bin/sh} ${rootdir}/move-if-change"
 
 # $arch is $6, as passed on the command line.
 # $ARCH is the same argument but in all uppercase.
diff -rNU3 a/opcodes/configure b/opcodes/configure
--- a/opcodes/configure	2022-08-05 18:54:59.000000000 +0900
+++ b/opcodes/configure	2023-01-16 08:10:53.000000000 +0900
@@ -11437,17 +11437,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Set WARN_WRITE_STRINGS if the compiler supports -Wwrite-strings.
@@ -11482,17 +11482,17 @@
 
 
 # Add -Wstack-usage if the compiler is a sufficiently recent version of GCC.
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-__GNUC__
-_ACEOF
-if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
-  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
-
-else
-  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
-fi
-rm -f conftest*
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+#__GNUC__
+#_ACEOF
+#if (eval "$ac_cpp_for_build conftest.$ac_ext") 2>&5 |
+#  $EGREP "(^[0-4]$|^__GNUC__$)" >/dev/null 2>&1; then :
+#
+#else
+#  GCC_WARN_CFLAGS_FOR_BUILD="$GCC_WARN_CFLAGS_FOR_BUILD -Wstack-usage=262144"
+#fi
+#rm -f conftest*
 
 
 # Check whether --enable-werror was given.
@@ -12551,6 +12551,7 @@
 	bfd_powerpc_64_arch)	ta="$ta ppc-dis.lo ppc-opc.lo" ;;
 	bfd_pru_arch)		ta="$ta pru-dis.lo pru-opc.lo" ;;
 	bfd_pyramid_arch)	;;
+	bfd_riscv_arch)		ta="$ta riscv-dis.lo riscv-opc.lo" ;;
 	bfd_romp_arch)		;;
 	bfd_riscv_arch)         ta="$ta riscv-dis.lo riscv-opc.lo" ;;
 	bfd_rs6000_arch)	ta="$ta ppc-dis.lo ppc-opc.lo" ;;
@@ -12558,7 +12559,29 @@
 	bfd_rx_arch)		ta="$ta rx-dis.lo rx-decode.lo";;
 	bfd_s390_arch)		ta="$ta s390-dis.lo s390-opc.lo" ;;
 	bfd_score_arch)		ta="$ta score-dis.lo score7-dis.lo" ;;
-	bfd_sh_arch)		ta="$ta sh-dis.lo cgen-bitset.lo" ;;
+	bfd_sh_arch)
+	  # We can't decide what we want just from the CPU family.
+	  # We want SH5 support unless a specific version of sh is
+	  # specified, as in sh3-elf, sh3b-linux-gnu, etc.
+	  # Include it just for ELF targets, since the SH5 bfd:s are ELF only.
+	  for t in $target $canon_targets; do
+	    # For NetBSD we do NOT want SH5 support unless sh5 or sh64
+	    # is specified
+	    case $t in
+	      sh5*-* | sh64*-*) # let the case below handle it
+				;;
+	      sh*-*-netbsd* | sh*l*-*-netbsd*)
+				continue ;;
+	      esac
+	    case $t in
+	      all |  sh5*-* | sh64*-* | sh-*-*elf* | shl*-*-*elf* | \
+	      sh-*-linux* | shl-*-linux*)
+				ta="$ta sh64-dis.lo sh64-opc.lo"
+				archdefs="$archdefs -DINCLUDE_SHMEDIA"
+				break;;
+	    esac;
+	  done
+				ta="$ta sh-dis.lo cgen-bitset.lo" ;;
 	bfd_sparc_arch)		ta="$ta sparc-dis.lo sparc-opc.lo" ;;
 	bfd_spu_arch)		ta="$ta spu-dis.lo spu-opc.lo" ;;
 	bfd_tic30_arch)		ta="$ta tic30-dis.lo" ;;
diff -rNU3 a/opcodes/Makefile.am b/opcodes/Makefile.am
--- a/opcodes/Makefile.am	2022-07-08 18:46:48.000000000 +0900
+++ b/opcodes/Makefile.am	2022-12-25 05:17:08.000000000 +0900
@@ -79,6 +79,7 @@
 	mep-desc.h mep-opc.h \
 	microblaze-opc.h \
 	mt-desc.h mt-opc.h \
+	or1k-desc.h or1k-opc.h \
 	score-opc.h \
 	sh-opc.h \
 	sysdep.h \
diff -rNU3 a/opcodes/Makefile.in b/opcodes/Makefile.in
--- a/opcodes/Makefile.in	2022-08-05 18:54:59.000000000 +0900
+++ b/opcodes/Makefile.in	2022-12-25 05:17:08.000000000 +0900
@@ -1022,6 +1022,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/or1k-dis.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/or1k-ibld.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/or1k-opc.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/or1k-opinst.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdp11-dis.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdp11-opc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pj-dis.Plo@am__quote@
 

